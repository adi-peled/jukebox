[{"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx":"1","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js":"2","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js":"3","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js":"4","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPlayList\\BoxPlayList.jsx":"5","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx":"6","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\utilService.js":"7","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx":"8","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx":"9","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js":"10","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\App.jsx":"11","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\boxActions.js":"12","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Player\\Player.jsx":"13","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Header\\Header.jsx":"14","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js":"15","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js":"16","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx":"17","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx":"18","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxInfo\\BoxInfo.jsx":"19","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx":"20","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\boxReducer.js":"21","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\httpService.js":"22"},{"size":7466,"mtime":1611911014276,"results":"23","hashOfConfig":"24"},{"size":669,"mtime":1611663042388,"results":"25","hashOfConfig":"24"},{"size":304,"mtime":1611662669005,"results":"26","hashOfConfig":"24"},{"size":2044,"mtime":1611662669006,"results":"27","hashOfConfig":"24"},{"size":2351,"mtime":1611683845173,"results":"28","hashOfConfig":"24"},{"size":1134,"mtime":1611662668990,"results":"29","hashOfConfig":"24"},{"size":326,"mtime":1611662669005,"results":"30","hashOfConfig":"24"},{"size":3046,"mtime":1611662668995,"results":"31","hashOfConfig":"24"},{"size":2144,"mtime":1611683845177,"results":"32","hashOfConfig":"24"},{"size":568,"mtime":1611662669004,"results":"33","hashOfConfig":"24"},{"size":3158,"mtime":1611683708953,"results":"34","hashOfConfig":"24"},{"size":3195,"mtime":1611773307628,"results":"35","hashOfConfig":"24"},{"size":7575,"mtime":1611783617763,"results":"36","hashOfConfig":"24"},{"size":4052,"mtime":1611662668993,"results":"37","hashOfConfig":"24"},{"size":788,"mtime":1611662669004,"results":"38","hashOfConfig":"24"},{"size":313,"mtime":1611662669007,"results":"39","hashOfConfig":"24"},{"size":2103,"mtime":1611913642490,"results":"40","hashOfConfig":"24"},{"size":5092,"mtime":1611862795488,"results":"41","hashOfConfig":"24"},{"size":748,"mtime":1611840390150,"results":"42","hashOfConfig":"24"},{"size":2542,"mtime":1611769356440,"results":"43","hashOfConfig":"24"},{"size":1096,"mtime":1611662669007,"results":"44","hashOfConfig":"24"},{"size":892,"mtime":1611662669004,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q1608t",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx",["105","106","107","108","109","110","111"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js",[],["112","113"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js",[],["114","115"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js",[],["116","117"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPlayList\\BoxPlayList.jsx",["118"],"import React, { useEffect, useState } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './BoxPlayList.scss'\r\nimport SongPreview from '../SongPreview/SongPreview'\r\nfunction BoxPlayList({box, playSong, deleteSong, reorder}) {\r\n\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isMobile, setIsMobile] = useState(false)\r\n  \r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        if (screenWidth < 850) {\r\n            setIsMobile(true)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n   \r\n    function onDragEnd(e){\r\n        const startPoint = e.source.index\r\n        const endPoint = e.destination\r\n        if(!endPoint) return\r\n        reorder(box.playList, startPoint, endPoint)\r\n    }\r\n    return (\r\n    <DragDropContext\r\n                onDragEnd={(e)=>onDragEnd(e)}\r\n            >\r\n        <Droppable droppableId={'songPick'}>\r\n        {(provided) => (\r\n                <ul \r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                className=\"playlist\">\r\n                {provided.placeholder}\r\n                {box&& box.playList.map((song, idx)=>{\r\n                    return(\r\n                            <Draggable\r\n                            key={song.id}\r\n                            draggableId={song.videoId} \r\n                            index={idx}\r\n                            isDragDisabled={isMobile}\r\n                            >\r\n                                {provided =>(\r\n                                <li \r\n                                key={idx}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}>\r\n                                    <SongPreview  idx={idx} song={song} playSong={playSong} deleteSong={deleteSong} />\r\n                                </li>\r\n                                )}\r\n                    </Draggable>\r\n                    )\r\n                })}\r\n            </ul>)\r\n            }\r\n        </Droppable>\r\n    </DragDropContext >\r\n\r\n    )\r\n}\r\n\r\nexport default BoxPlayList\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx",["119","120"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n// import playButton from '../../assets/img/play-button.svg'\r\nimport { ReactComponent as PlayButton } from '../../assets/img/play-button.svg'\r\nimport './BoxPreview.scss'\r\nfunction BoxPreview({ box }) {\r\n    const [showName, setShowName] = useState(false)\r\n\r\n    return (\r\n        <Link onMouseLeave={() => setShowName(false)}\r\n            onMouseOver={() => setShowName(true)}\r\n            className='boxPreview flex' to={`/boxDetails/${box._id}`}>\r\n            <PlayButton className=\"play-icon\" />\r\n            {/* <PlayCircleOutlineIcon /> */}\r\n            <img className={showName ? 'boxPreview__img brightness' : 'boxPreview__img'} src={box.imgUrl} />\r\n            <div className=\"boxPreview__info flex\" >\r\n                {!showName && <span className=\"boxPreview__title\">   {box.name}</span>}\r\n                {showName && <span className=\"boxPreview__title fullName\">   {box.name}</span>}\r\n            </div>\r\n\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\nexport default BoxPreview\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\utilService.js",[],["121","122"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx",["123","124","125"],"import React, { useEffect, useState } from 'react'\r\nimport './SocialLinks.scss'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AttachFileSharpIcon from '@material-ui/icons/AttachFileSharp';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { WhatsappShareButton} from \"react-share\";\r\nimport { Button } from '@material-ui/core';\r\nfunction SocialLinks({ showAddSong, onLike, isLiked, setCurrCmp, currCmp }) {\r\n    const url = window.location.href\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isCopied, setIsCopied] = useState(false)\r\n    function copyToClipboard() {\r\n        const el = document.createElement('textarea');\r\n        el.value = url;\r\n        el.setAttribute('readonly', '');\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setIsCopied(true)\r\n        setTimeout(() => {\r\n            setIsCopied(false)\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"social-links flex space-between\">\r\n            <div className=\"social-links__add\">\r\n                {isLiked ? <FavoriteIcon className=\"liked\" onClick={onLike} /> : <FavoriteBorderIcon onClick={onLike} />}\r\n                <AddIcon onClick={() => showAddSong(true)} />\r\n            </div>\r\n\r\n            {screenWidth < 850 && <div className=\"flex social-links__nav-container\">\r\n                <button className={currCmp==='BoxPlayList' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('BoxPlayList')}>Playlist</button>\r\n                <button className={currCmp==='Chat' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('Chat')}>Chat</button>\r\n            </div>}\r\n\r\n            {isCopied && <Alert className=\"social-links__success\" severity=\"success\" >\r\n                success!  Link copied to copy To clipboard\r\n                </Alert>}\r\n            <div className=\"social-links-section-social\">\r\n                <LinkIcon className=\"copy-to-clip\" onClick={copyToClipboard} />\r\n                <WhatsappShareButton url={url} title=\"share music box\"> \r\n                <WhatsAppIcon/>\r\n                </WhatsappShareButton>\r\n                <a href={`https://www.facebook.com/sharer/sharer.php?href=${url}`} target=\"_blank\"> <FacebookIcon /> </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx",["126","127","128"],"import React, { useState, useEffect } from 'react'\r\n//Css\r\nimport './SongPreview.scss'\r\n//Components\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport equalizer from '../../assets/img/equalizer.gif'\r\n//redux\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nfunction SongPreview({ song, playSong, deleteSong, idx }) {\r\n    const [isRemoving, setIsRemoving] = useState(false)\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const isSongPlaying = (song.id === currSong?.id) && currSong?.isPlaying;\r\n    const isCurrSong = currSong?.id===song.id? true:false;\r\n    function changeIsRemoving() {\r\n        setIsRemoving(!isRemoving)\r\n        setTimeout(() => {\r\n            setIsRemoving(false)\r\n        }, 3000)\r\n    }\r\n    return (\r\n    \r\n            <div className={isCurrSong? \"flex space-between song-preview active\": \"flex space-between song-preview\"} onDoubleClick={() => playSong(song)}>\r\n            <div className=\"song-preview-left flex\">\r\n                {isSongPlaying ? <PauseCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(currSong)} /> :\r\n                    <PlayCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(song)} />}\r\n                <img className=\"song-preview-img\" src={song.imgUrl} />\r\n                <div>{song.name}</div>\r\n            </div>\r\n            <div className=\"song-preview-right flex\">\r\n                <div className=\"song-preview-duration\">{song.duration}</div>\r\n                {isSongPlaying ? <img className=\"equalizer-gif\" src={equalizer} /> : <div className=\"equalizer-gif\"></div>}\r\n                {isRemoving ? <DeleteOutlineOutlinedIcon  onClick={() => deleteSong(song.id)} className=\"song-preview-svg song-preview-svg--delete\" /> : <MoreVertIcon onClick={changeIsRemoving} className=\"song-preview-svg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongPreview\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js",[],["129","130"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\App.jsx",["131","132","133","134","135","136","137","138"],"import react, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { userService } from './services/userService'\r\nimport { utilService } from './services/utilService'\r\nimport { socketService } from './services/socketService'\r\n//cmps\r\nimport Slider, { Range } from 'rc-slider';\r\n\r\nimport Header from './cmps/Header/Header'\r\nimport Main from './pages/Main/Main'\r\nimport Home from './pages/Home/Home';\r\nimport BoxDetails from './pages/BoxDetails/BoxDetails'\r\nimport Player from './cmps/Player/Player'\r\nimport Login from './cmps/Login/Login'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CreateBox from './cmps/CreateBox/CreateBox';\r\n//scss\r\nimport './App.scss';\r\nimport defaultImg from './assets/img/defaultUser.jpg'\r\nfunction App() {\r\n\r\n  const [showCreateBox, setShowCreateBox] = useState(false)\r\n  const [showLogin, setShowLogin] = useState({ show: false, type: '' })\r\n  const [showSuccess, setShowSuccess] = useState(false)\r\n  const { user } = useSelector(state => state.userReducer)\r\n  const [boolean, setBoolean] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(async () => {\r\n\r\n    if (!user) {\r\n      const loggedUser = await userService.getUser()\r\n      if (loggedUser) {\r\n        dispatch({ type: 'SET_USER', user: loggedUser })\r\n      } else {\r\n        let guest = sessionStorage.getItem('guest')\r\n        if (!guest) {\r\n          const randomNum = Math.floor(Math.random() * 9999)\r\n          guest = {\r\n            username: `guest_${randomNum}`,\r\n            imgString: defaultImg,\r\n            favs: [],\r\n            isGuest: true,\r\n            _id: utilService.makeId()\r\n          }\r\n          sessionStorage.setItem('guest', JSON.stringify(guest))\r\n          dispatch({ type: 'SET_USER', user: guest })\r\n        } else {\r\n          dispatch({ type: 'SET_USER', user: JSON.parse(guest) })\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header\r\n          toggleShowBox={setShowCreateBox}\r\n          toggleShowLogin={setShowLogin}\r\n        />\r\n        {showCreateBox &&\r\n          < >\r\n            <CreateBox openModal={setShowCreateBox} />\r\n            <div onClick={() => setShowCreateBox(false)} className=\"screen\" />\r\n          </>}\r\n\r\n        {showLogin.show && user.isGuest &&\r\n          <>\r\n            <Login type={showLogin.type} showSuccess={setShowSuccess} />\r\n            <div onClick={() => setShowLogin({ show: false, type: '' })} className=\"screen\" />\r\n          </>}\r\n\r\n        {showSuccess && <Alert className=\"success\" severity=\"success\" >\r\n          success!   you now logged in\r\n                </Alert>}\r\n        <div className=\"app-container\">\r\n          <Switch>\r\n            <Route component={BoxDetails} path=\"/boxDetails/:id\" />\r\n            <Route component={Main} path=\"/main/:genre\" />\r\n            <Route component={Main} path=\"/main\" />\r\n            <Route component={Home} path=\"/\" />\r\n          </Switch>\r\n        </div>\r\n        <Player />\r\n      </Router>\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n",["139","140"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\boxActions.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Player\\Player.jsx",["141","142","143","144","145","146"],"import React, { useState, useEffect, createRef } from 'react'\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrSong, updateProgress } from '../../store/actions/boxActions'\r\n//Scss\r\nimport './Player.scss'\r\n//Components \r\nimport Slider from '@material-ui/core/Slider';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n//services\r\nimport { socketService } from '../../services/socketService'\r\n\r\nfunction Player() {\r\n    const dispatch = useDispatch()\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const { currBox } = useSelector(state => state.boxReducer)\r\n    const [volume, setVolume] = useState(0.75)\r\n    const [secPlayed, setSecPlayed] = useState(0)\r\n    const [duration, setDuration] = useState(0)\r\n    const [mute, setMute] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [seeking, setSeeking] = useState(false)\r\n    const [newBox, setNewBox] = useState(null)\r\n    const elPlayer = createRef()\r\n\r\n    function skipSong(diff) {\r\n        currBox.playList.forEach((song, index) => {\r\n            if (song.id === currSong.id) {\r\n                if (index + diff >= currBox.playList.length) {\r\n                    dispatch(setCurrSong(currBox.playList[0]))\r\n                    socketService.emit('update song', currBox.playList[0])\r\n                } else if (index + diff < 0) {\r\n                    dispatch(setCurrSong(currBox.playList[currBox.playList.length - 1]))\r\n                    socketService.emit('update song', currBox.playList[currBox.playList.length - 1])\r\n                } else {\r\n                    dispatch(setCurrSong(currBox.playList[index + diff]))\r\n                    socketService.emit('update song', currBox.playList[index + diff])\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        if (screenWidth < 850) {\r\n            setVolume(1)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currBox) {\r\n\r\n        }\r\n    }, [currBox])\r\n\r\n    function handleVolumeChange({ target }, newVal) {\r\n        setVolume(parseFloat(newVal))\r\n    }\r\n\r\n    function handleProgress(e) {\r\n        // if (!seeking && !isSyncing) {\r\n        if (!seeking) {\r\n            setSecPlayed(e.playedSeconds)\r\n            // if (currBox._id !== newBox._id) setNewBox(currBox)\r\n            dispatch(updateProgress((e.playedSeconds)))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currSong) {\r\n            // setSecPlayed(currSong.secPlayed)\r\n            seekTo(currSong.secPlayed)\r\n        }\r\n    }, [currSong])\r\n\r\n    function handleDuration(e) {\r\n        setDuration(e)\r\n    }\r\n\r\n    function pauseSong() {\r\n        dispatch(setCurrSong(currSong))\r\n        socketService.emit('update song', { ...currSong, isPlaying: currSong.isPlaying })\r\n    }\r\n\r\n    function handleMute() {\r\n        setMute(!mute)\r\n    }\r\n\r\n    function seekTo(sec) {\r\n        if (sec !== secPlayed) {\r\n            elPlayer.current.seekTo(parseFloat(sec), 'seconds');\r\n        }\r\n    }\r\n\r\n    function handleSeekMouseDown() {\r\n        setSeeking(true)\r\n    }\r\n\r\n    function handleSeekChange({ target }, newVal) {\r\n        setSecPlayed(newVal);\r\n    }\r\n\r\n    function handleSeekMouseUp(e) {\r\n        elPlayer.current.seekTo(parseFloat(secPlayed))\r\n        const song = { ...currSong, secPlayed, isPlaying: !currSong.isPlaying }\r\n        dispatch(setCurrSong(song))\r\n        socketService.emit('update song', song)\r\n        setSeeking(false)\r\n    }\r\n\r\n    function showTime(seconds) {\r\n        var mins;\r\n        var secs;\r\n        if (seconds >= 60) {\r\n            mins = (parseInt(seconds / 60)).toString();\r\n            secs = (parseInt(seconds - mins * 60)).toString().padStart(2, '0');\r\n        } else {\r\n            mins = '0';\r\n            secs = (parseInt(seconds)).toString().padStart(2, '0');\r\n        }\r\n        return `${mins}:${secs}`\r\n    }\r\n    return (\r\n        <div>\r\n            {currSong && <ReactPlayer\r\n                ref={elPlayer}\r\n                className=\"hidden\"\r\n                playsinline={true}\r\n                controls={false}\r\n                playing={currSong.isPlaying}\r\n                url={`https://www.youtube.com/watch?v=${currSong?.videoId}`}\r\n                volume={volume}\r\n                muted={mute}\r\n                onProgress={(e) => handleProgress(e)}\r\n                onDuration={(e) => handleDuration(e)}\r\n                onEnded={() => skipSong(1)}\r\n            />}\r\n            {currSong && <div className={currSong.isPlaying ? \"player bgc-animation\" : \"player \"}>\r\n                <div>\r\n                    <img className=\"player-img\" src={currSong.imgUrl} alt=\"\" />\r\n                    {screenWidth > 850 && <p>{currSong.name}</p>}\r\n                </div>\r\n                {screenWidth > 850 && <div>\r\n                    {showTime(secPlayed)}\r\n                    <Slider className=\"duration-slider\"\r\n                        name=\"played\"\r\n                        min={0}\r\n                        max={duration}\r\n                        onMouseDown={handleSeekMouseDown}\r\n                        onMouseUp={handleSeekMouseUp}\r\n                        onChange={handleSeekChange}\r\n                        onTouchEnd={handleSeekMouseUp}\r\n                        value={secPlayed}\r\n                    />\r\n                    {showTime(duration)}\r\n                </div>}\r\n                {screenWidth < 850 && <div>{showTime(secPlayed)}</div>}\r\n\r\n                <div className=\"player-buttons\">\r\n                    <button onClick={() => skipSong(-1)}>\r\n                        <SkipPreviousIcon />\r\n                    </button>\r\n                    <button onClick={() => pauseSong()}>{currSong?.isPlaying ? <PauseCircleOutlineIcon />\r\n                        : <PlayCircleOutlineIcon />}\r\n                    </button>\r\n                    <button onClick={() => skipSong(1)}>\r\n                        <SkipNextIcon />\r\n                    </button>\r\n                    <button onClick={handleMute}>\r\n                        {mute == true && <VolumeOffIcon />}\r\n                        {mute === false && volume == 0 && <VolumeOffIcon />}\r\n                        {mute === false && volume > 0 && volume < 0.75 && <VolumeDownIcon />}\r\n                        {mute === false && volume >= 0.75 && volume <= 1 && <VolumeUpIcon />}\r\n                    </button>\r\n\r\n                    {screenWidth > 850 && <Slider className=\"volume-slider\"\r\n                        aria-labelledby=\"continuous-slider\"\r\n                        key={`slider`}\r\n                        value={volume}\r\n                        orientation=\"vertical\"\r\n                        min={0}\r\n                        step={0.05}\r\n                        max={1}\r\n                        onChange={handleVolumeChange}\r\n                    />}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n\r\n//maor!!","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Header\\Header.jsx",["147"],"import React, { useEffect, useState } from 'react'\r\nimport './Header.scss'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadLoggedUser, signout } from '../../store/actions/userActions'\r\nimport { setFilter } from '../../store/actions/boxActions'\r\n//icons\r\nimport jukeBox from '../../assets/img/equalizerLogo.png'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nfunction Header({ toggleShowBox, toggleShowLogin }) {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector(state => state.userReducer)\r\n    const [showProfileMenu, setShowProfileMenu] = useState(false)\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isScroll, setIsScroll] = useState(false)\r\n\r\n    function onScroll() {\r\n        if (window.scrollY > 0) {\r\n            setIsScroll(true)\r\n        }\r\n        else {\r\n            setIsScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // dispatch(loadLoggedUser())\r\n        window.addEventListener(\"scroll\", onScroll)\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n    }, [])\r\n\r\n\r\n    function onSearch(txt) {\r\n        history.push(`/main`)\r\n        dispatch(setFilter({ name: txt, genre: '' }))\r\n    }\r\n\r\n\r\n    return (\r\n        <header onScroll={onScroll} className={isScroll ? \"header flex sticky\" : \"header flex \"}>\r\n            <img className=\"header__logo\" src={jukeBox} alt=\"logo\" onClick={() => history.push('/')} />\r\n            <div className=\"header__input-container flex\">\r\n                <input\r\n                    className=\"header__input-container--search\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(ev) => onSearch(ev.target.value)}\r\n                />\r\n                <SearchIcon className=\"header__input-container--icon\" />\r\n            </div>\r\n            <ul className=\"header__nav flex\">\r\n                <div className=\"relative\">\r\n                    {screenWidth < 600 && <>\r\n                        <MenuIcon className=\"header__menu-icon\" onClick={() => setShowMenu(!showMenu)} />\r\n                        {showMenu && <div onClick={() => setShowMenu(false)} className=\"screen\" />}\r\n\r\n                    </>\r\n                    }\r\n                    {(screenWidth >= 600 || showMenu) && <div className={screenWidth < 600 ? 'menu' : 'flex'}>\r\n\r\n                        <li className=\"header__item--menu\">\r\n                            <NavLink to=\"/main\" className=\"header__link\" exact >Boxes</NavLink>\r\n                        </li>\r\n                        <li className=\"header__item--menu\" onClick={() => toggleShowBox(true)}>\r\n                            New Box\r\n                       </li>\r\n                    </div>}\r\n\r\n                </div>\r\n\r\n                <li className=\"header__item\">\r\n                    <PersonIcon className=\"header__profile\" onClick={() => setShowProfileMenu(!showProfileMenu)} />\r\n                    {showProfileMenu && <>\r\n                        <ul className=\"profile__list\">\r\n                            {(!user|| user.isGuest) && <>\r\n                                <li onClick={() => toggleShowLogin({ show: true, type: 'signup' })} className=\"profile__item\">Signup</li>\r\n                                <li onClick={() => toggleShowLogin({ show: true, type: 'login' })} className=\"profile__item\">Login</li>\r\n                            </>}\r\n                            {(user&& !user.isGuest)  && <li onClick={() => dispatch(signout())} className=\"profile__item\">Logout</li>}\r\n                        </ul>\r\n                        <div onClick={() => setShowProfileMenu(false)} className=\"screen\" />\r\n                    </>\r\n                    }\r\n                </li>\r\n            </ul>\r\n\r\n\r\n\r\n\r\n\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js",["148","149"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js",[],["150","151"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx",["152","153"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx",["154","155","156"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxInfo\\BoxInfo.jsx",["157"],"import React from 'react'\r\nimport './BoxInfo.scss'\r\n\r\nfunction BoxInfo({ box }) {\r\n    return (\r\n        <div className=\"box-info flex\">\r\n          <section></section>\r\n                <img className=\"box-info__img\" src={box.imgUrl} />\r\n       \r\n            <div className=\"box-info__details\">\r\n                <h3 className=\"title\">\r\n                    {box.name}\r\n                </h3>\r\n                <p className=\"box-info__desc\">\r\n                    {box.desc}\r\n                </p>\r\n                <span className=\"box-info__genre\">  {box.genre}</span>\r\n                <p className=\"box-info__createdBy\">created by: {box.createdBy ? box.createdBy : 'guest'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoxInfo\r\n\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx",["158","159","160","161"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\boxReducer.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\httpService.js",["162"],{"ruleId":"163","severity":1,"message":"164","line":15,"column":64,"nodeType":"165","messageId":"166","endLine":15,"endColumn":75},{"ruleId":"167","severity":1,"message":"168","line":35,"column":30,"nodeType":"165","endLine":35,"endColumn":41},{"ruleId":"167","severity":1,"message":"169","line":54,"column":8,"nodeType":"170","endLine":54,"endColumn":10,"suggestions":"171"},{"ruleId":"167","severity":1,"message":"172","line":65,"column":8,"nodeType":"170","endLine":65,"endColumn":28,"suggestions":"173"},{"ruleId":"167","severity":1,"message":"174","line":103,"column":8,"nodeType":"170","endLine":103,"endColumn":14,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"176","line":119,"column":8,"nodeType":"170","endLine":119,"endColumn":18,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"178","line":127,"column":8,"nodeType":"170","endLine":127,"endColumn":17,"suggestions":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"182","replacedBy":"185"},{"ruleId":"180","replacedBy":"186"},{"ruleId":"182","replacedBy":"187"},{"ruleId":"167","severity":1,"message":"188","line":18,"column":8,"nodeType":"170","endLine":18,"endColumn":10,"suggestions":"189"},{"ruleId":"163","severity":1,"message":"190","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":29},{"ruleId":"191","severity":1,"message":"192","line":16,"column":13,"nodeType":"193","endLine":16,"endColumn":109},{"ruleId":"180","replacedBy":"194"},{"ruleId":"182","replacedBy":"195"},{"ruleId":"163","severity":1,"message":"196","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":27},{"ruleId":"163","severity":1,"message":"197","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":62,"column":84,"nodeType":"200","endLine":62,"endColumn":99},{"ruleId":"163","severity":1,"message":"201","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":31,"column":17,"nodeType":"193","endLine":31,"endColumn":71},{"ruleId":"191","severity":1,"message":"192","line":36,"column":34,"nodeType":"193","endLine":36,"endColumn":83},{"ruleId":"180","replacedBy":"202"},{"ruleId":"182","replacedBy":"203"},{"ruleId":"163","severity":1,"message":"204","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"205","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":23},{"ruleId":"163","severity":1,"message":"206","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":14},{"ruleId":"163","severity":1,"message":"207","line":9,"column":18,"nodeType":"165","messageId":"166","endLine":9,"endColumn":23},{"ruleId":"163","severity":1,"message":"208","line":28,"column":10,"nodeType":"165","messageId":"166","endLine":28,"endColumn":17},{"ruleId":"163","severity":1,"message":"209","line":28,"column":19,"nodeType":"165","messageId":"166","endLine":28,"endColumn":29},{"ruleId":"167","severity":1,"message":"210","line":31,"column":13,"nodeType":"211","endLine":55,"endColumn":4},{"ruleId":"167","severity":1,"message":"212","line":55,"column":6,"nodeType":"170","endLine":55,"endColumn":8,"suggestions":"213"},{"ruleId":"180","replacedBy":"214"},{"ruleId":"182","replacedBy":"215"},{"ruleId":"163","severity":1,"message":"216","line":30,"column":12,"nodeType":"165","messageId":"166","endLine":30,"endColumn":18},{"ruleId":"163","severity":1,"message":"217","line":30,"column":20,"nodeType":"165","messageId":"166","endLine":30,"endColumn":29},{"ruleId":"167","severity":1,"message":"188","line":58,"column":8,"nodeType":"170","endLine":58,"endColumn":10,"suggestions":"218"},{"ruleId":"167","severity":1,"message":"219","line":84,"column":8,"nodeType":"170","endLine":84,"endColumn":18,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":180,"column":31,"nodeType":"223","messageId":"224","endLine":180,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":181,"column":51,"nodeType":"223","messageId":"224","endLine":181,"endColumn":53},{"ruleId":"163","severity":1,"message":"225","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":24},{"ruleId":"163","severity":1,"message":"226","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":11},{"ruleId":"227","severity":1,"message":"228","line":18,"column":44,"nodeType":"223","messageId":"229","endLine":18,"endColumn":45},{"ruleId":"180","replacedBy":"230"},{"ruleId":"182","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":52,"column":7,"nodeType":"200","endLine":52,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":68,"column":16,"nodeType":"193","endLine":68,"endColumn":67},{"ruleId":"163","severity":1,"message":"234","line":3,"column":17,"nodeType":"165","messageId":"166","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":72,"column":68,"nodeType":"193","endLine":72,"endColumn":93},{"ruleId":"191","severity":1,"message":"192","line":81,"column":25,"nodeType":"193","endLine":81,"endColumn":74},{"ruleId":"191","severity":1,"message":"192","line":8,"column":17,"nodeType":"193","endLine":8,"endColumn":67},{"ruleId":"163","severity":1,"message":"235","line":1,"column":36,"nodeType":"165","messageId":"166","endLine":1,"endColumn":44},{"ruleId":"163","severity":1,"message":"236","line":11,"column":8,"nodeType":"165","messageId":"166","endLine":11,"endColumn":14},{"ruleId":"163","severity":1,"message":"237","line":16,"column":10,"nodeType":"165","messageId":"166","endLine":16,"endColumn":20},{"ruleId":"167","severity":1,"message":"238","line":26,"column":8,"nodeType":"170","endLine":26,"endColumn":10,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":13,"column":1,"nodeType":"242","endLine":26,"endColumn":2},"no-unused-vars","'loadBoxChat' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["243"],"React Hook useEffect has missing dependencies: 'id' and 'user'. Either include them or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'debounceLoadData', 'dispatch', 'id', and 'props.match.params.id'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'newSong'. Either include it or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'getCurrCmp'. Either include it or remove the dependency array.",["247"],"no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],["248"],["249"],"React Hook useEffect has a missing dependency: 'screenWidth'. Either include it or remove the dependency array.",["250"],"'PlayCircleOutlineIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["248"],["249"],"'AttachFileSharpIcon' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useEffect' is defined but never used.",["248"],["249"],"'react' is defined but never used.","'socketService' is defined but never used.","'Slider' is defined but never used.","'Range' is defined but never used.","'boolean' is assigned a value but never used.","'setBoolean' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["251"],["248"],["249"],"'newBox' is assigned a value but never used.","'setNewBox' is assigned a value but never used.",["252"],"React Hook useEffect has a missing dependency: 'seekTo'. Either include it or remove the dependency array.",["253"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loadLoggedUser' is defined but never used.","'img' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["248"],["249"],"react/jsx-no-duplicate-props","No duplicate props allowed","'TextField' is defined but never used.","'useState' is defined but never used.","'Footer' is defined but never used.","'boxService' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["254"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"265","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [dispatch, id]",{"range":"274","text":"275"},"Update the dependencies array to be: [id, user, user.favs.length]",{"range":"276","text":"277"},"Update the dependencies array to be: [debounceLoadData, dispatch, id, props.match.params.id, user]",{"range":"278","text":"279"},"Update the dependencies array to be: [currSong, newSong]",{"range":"280","text":"281"},"Update the dependencies array to be: [currCmp, getCurrCmp]",{"range":"282","text":"283"},"Update the dependencies array to be: [screenWidth]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch, user]",{"range":"286","text":"287"},{"range":"288","text":"285"},"Update the dependencies array to be: [currSong, seekTo]",{"range":"289","text":"290"},"Update the dependencies array to be: [dispatch]",{"range":"291","text":"292"},[2300,2302],"[dispatch, id]",[2596,2616],"[id, user, user.favs.length]",[4037,4043],"[debounceLoadData, dispatch, id, props.match.params.id, user]",[4487,4497],"[currSong, newSong]",[4628,4637],"[currCmp, getCurrCmp]",[722,724],"[screenWidth]",[1982,1984],"[dispatch, user]",[2588,2590],[3222,3232],"[currSong, seekTo]",[1178,1180],"[dispatch]"]