[{"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\App.jsx":"1","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx":"2","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\boxActions.js":"3","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\boxService.js":"4","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\socketService.js":"5","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\index.js":"6","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Player\\Player.jsx":"7","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\AddSong\\AddSong.jsx":"8","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx":"9"},{"size":3091,"mtime":1611233375493,"results":"10","hashOfConfig":"11"},{"size":6453,"mtime":1611235140128,"results":"12","hashOfConfig":"11"},{"size":2729,"mtime":1611234111076,"results":"13","hashOfConfig":"11"},{"size":788,"mtime":1611232992035,"results":"14","hashOfConfig":"11"},{"size":568,"mtime":1611233420397,"results":"15","hashOfConfig":"11"},{"size":647,"mtime":1610655762931,"results":"16","hashOfConfig":"11"},{"size":6015,"mtime":1611227000312,"results":"17","hashOfConfig":"11"},{"size":1886,"mtime":1610985491884,"results":"18","hashOfConfig":"11"},{"size":908,"mtime":1610961627676,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bdcmg8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\App.jsx",["40","41","42","43"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx",["44","45","46","47","48","49","50"],"import React, { useEffect, useState, useCallback } from 'react'\r\nimport { debounce } from 'debounce';\r\n//Scss\r\nimport './BoxDetails.scss'\r\n//Components\r\nimport { CircleLoading } from 'react-loadingg';\r\nimport BoxPlayList from '../../cmps/BoxPlayList/BoxPlayList'\r\nimport Chat from '../../cmps/Chat/Chat'\r\nimport BoxInfo from '../../cmps/BoxInfo/BoxInfo'\r\nimport SocialLinks from '../../cmps/SocialLinks/SocialLinks'\r\nimport AddSong from '../../cmps/AddSong/AddSong'\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrSong, removeSong, loadBox, addSong, updateBox } from '../../store/actions/boxActions'\r\nimport { toggleLike } from '../../store/actions/userActions'\r\n//Socket\r\nimport { io } from 'socket.io-client'\r\nimport { socketService } from '../../services/socketService'\r\nimport { boxService } from '../../services/boxService'\r\n\r\nfunction BoxDetails(props) {\r\n    const { id } = props.match.params\r\n    const box = useSelector(state => state.boxReducer.currBox)\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const user = useSelector(state => state.userReducer.user)\r\n    const dispatch = useDispatch();\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [showAddSong, setShowAddSong] = useState(false)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [currCmp, setCurrCmp] = useState('BoxPlayList')\r\n    const [showIsTyping, setShowIsTyping] = useState(null)\r\n    const [showJoinedUser, setShowJoinedUser] = useState(null)\r\n    const [showNewSong, setShowNewSong] = useState(null)\r\n    const debounceLoadData = useCallback(debounce(fetchData, 1500), []);\r\n    const [userList, setUserList] = useState(null)\r\n    const [newSong, setNewSong] = useState('')\r\n    useEffect(() => {\r\n        dispatch(loadBox(id))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const idx = user.favs.findIndex(favBox => favBox._id === id)\r\n            idx === -1 ? setIsLiked(false) : setIsLiked(true)\r\n        }\r\n    }, [user?.favs?.length])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            socketService.emit('join box', { boxId: id, user })\r\n        }\r\n        socketService.on('user is typing', (username) => {\r\n            setShowIsTyping(username)\r\n            debounceLoadData();\r\n        })\r\n        socketService.on('msgSent', () => {\r\n            dispatch(loadBox(id))\r\n        })\r\n        socketService.on('user joined', ({ username, userList }) => onJoinedUser(username, userList))\r\n        socketService.on('user leave', (updateUserList) => {\r\n\r\n            setUserList(updateUserList)\r\n        })\r\n        socketService.on('set song', async song => {\r\n            if (!song) {\r\n                const box = await boxService.getBoxById(id)\r\n                dispatch(setCurrSong(box.playList[0]))\r\n                socketService.emit('update song', box.playList[0])\r\n            } else {\r\n                setNewSong(song)\r\n                dispatch(setCurrSong({ ...song, isPlaying: song.isPlaying }))\r\n            }\r\n        })\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n            // socketService.emit('user left', user)\r\n        }\r\n    }, [user])\r\n\r\n    const onJoinedUser = (username, userList) => {\r\n        setShowJoinedUser(username)\r\n        setUserList(userList)\r\n        setTimeout(() => {\r\n            setShowJoinedUser(null)\r\n        }, 5000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!currSong && !newSong) return\r\n        if (newSong.videoId === currSong.videoId) return\r\n        socketService.emit('update song', { ...currSong, isPlaying: !currSong.isPlaying })\r\n\r\n    }, [currSong])\r\n\r\n    async function fetchData() {\r\n        setShowIsTyping(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrCmp()\r\n    }, [currCmp])\r\n\r\n    function getCurrCmp() {\r\n        if (currCmp === 'Chat' && screenWidth < 850) {\r\n            return <Chat isTyping={isTyping} sendMsg={sendMsg} box={box} />\r\n        } else if (currCmp === 'BoxPlayList') {\r\n            return <BoxPlayList playSong={playSong} deleteSong={deleteSong} box={box} />\r\n        }\r\n    }\r\n\r\n    function playSong(song) {\r\n        dispatch(setCurrSong(song))\r\n    }\r\n    async function deleteSong(songId) {\r\n        dispatch(removeSong(id, songId))\r\n    }\r\n    function onLike() {\r\n        dispatch(toggleLike(user, box, isLiked))\r\n    }\r\n    const onAddSong = (song) => {\r\n        dispatch(addSong(song, id))\r\n        setShowNewSong(song.snippet.title)\r\n        setTimeout(() => {\r\n            setShowNewSong(null)\r\n        }, 3000)\r\n    }\r\n    function sendMsg(data) {\r\n        dispatch(updateBox(data))\r\n        socketService.emit('sendMsg', data)\r\n    }\r\n    function isTyping(box, user) {\r\n        socketService.emit('typing', { box, username: user.username })\r\n    }\r\n\r\n    return (\r\n        <div className=\"box-details\">\r\n            { !box && <CircleLoading />}\r\n            { box && <>\r\n                <div className=\"box-details__container flex \">\r\n                    {screenWidth > 850 && <Chat\r\n                        isTyping={isTyping}\r\n                        sendMsg={sendMsg}\r\n                        box={box}\r\n                        typingUser={showIsTyping}\r\n                        joinedUser={showJoinedUser}\r\n                        newSong={showNewSong}\r\n                    />}\r\n\r\n                    <div className=\"box-details-section2\">\r\n                        {userList && userList.map(user => {\r\n                            return <div key={user._id} className=\"user\">{user.username}</div>\r\n                        })}\r\n                        <BoxInfo box={box} />\r\n                        <SocialLinks isLiked={isLiked} onLike={onLike} showAddSong={setShowAddSong} setCurrCmp={setCurrCmp} currCmp={currCmp} />\r\n                        {screenWidth > 850 && <BoxPlayList playSong={playSong} deleteSong={deleteSong} box={box} />}\r\n                        {screenWidth < 850 && <>{getCurrCmp()}</>}\r\n                    </div>\r\n                </div>\r\n\r\n                {showAddSong && <>\r\n                    <AddSong onClose={setShowAddSong} onAddSong={onAddSong} />\r\n                    <div onClick={() => setShowAddSong(false)} className=\"screen\" />\r\n                </>}\r\n            </>}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BoxDetails;\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\boxActions.js",[],["51","52"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\boxService.js",["53","54"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\socketService.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\index.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Player\\Player.jsx",["55","56","57"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\AddSong\\AddSong.jsx",["58","59","60"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx",["61"],{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":28,"column":13,"nodeType":"69","endLine":52,"endColumn":4},{"ruleId":"67","severity":1,"message":"70","line":52,"column":6,"nodeType":"71","endLine":52,"endColumn":8,"suggestions":"72"},{"ruleId":"62","severity":1,"message":"73","line":17,"column":10,"nodeType":"64","messageId":"65","endLine":17,"endColumn":12},{"ruleId":"67","severity":1,"message":"74","line":34,"column":30,"nodeType":"64","endLine":34,"endColumn":41},{"ruleId":"67","severity":1,"message":"75","line":39,"column":8,"nodeType":"71","endLine":39,"endColumn":10,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":46,"column":8,"nodeType":"71","endLine":46,"endColumn":28,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":79,"column":8,"nodeType":"71","endLine":79,"endColumn":14,"suggestions":"80"},{"ruleId":"67","severity":1,"message":"81","line":94,"column":8,"nodeType":"71","endLine":94,"endColumn":18,"suggestions":"82"},{"ruleId":"67","severity":1,"message":"83","line":102,"column":8,"nodeType":"71","endLine":102,"endColumn":17,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"62","severity":1,"message":"89","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":11},{"ruleId":"90","severity":1,"message":"91","line":18,"column":44,"nodeType":"92","messageId":"93","endLine":18,"endColumn":45},{"ruleId":"67","severity":1,"message":"94","line":54,"column":8,"nodeType":"71","endLine":54,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":135,"column":31,"nodeType":"92","messageId":"98","endLine":135,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":136,"column":51,"nodeType":"92","messageId":"98","endLine":136,"endColumn":53},{"ruleId":"67","severity":1,"message":"74","line":11,"column":30,"nodeType":"64","endLine":11,"endColumn":41},{"ruleId":"67","severity":1,"message":"99","line":24,"column":8,"nodeType":"71","endLine":24,"endColumn":13,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":35,"column":25,"nodeType":"103","endLine":35,"endColumn":96},{"ruleId":"101","severity":1,"message":"102","line":13,"column":13,"nodeType":"103","endLine":13,"endColumn":65},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'socketService' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["104"],"'io' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'id' and 'user'. Either include them or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'debounceLoadData', 'dispatch', and 'id'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'newSong'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'getCurrCmp'. Either include it or remove the dependency array.",["109"],"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'img' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'screenWidth'. Either include it or remove the dependency array.",["112"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'debounceLoadData'. Either include it or remove the dependency array.",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [dispatch, user]",{"range":"130","text":"131"},"Update the dependencies array to be: [dispatch, id]",{"range":"132","text":"133"},"Update the dependencies array to be: [id, user, user.favs.length]",{"range":"134","text":"135"},"Update the dependencies array to be: [debounceLoadData, dispatch, id, user]",{"range":"136","text":"137"},"Update the dependencies array to be: [currSong, newSong]",{"range":"138","text":"139"},"Update the dependencies array to be: [currCmp, getCurrCmp]",{"range":"140","text":"141"},"Update the dependencies array to be: [screenWidth]",{"range":"142","text":"143"},"Update the dependencies array to be: [debounceLoadData, txt]",{"range":"144","text":"145"},[1915,1917],"[dispatch, user]",[1821,1823],"[dispatch, id]",[2027,2047],"[id, user, user.favs.length]",[3327,3333],"[debounceLoadData, dispatch, id, user]",[3775,3785],"[currSong, newSong]",[3916,3925],"[currCmp, getCurrCmp]",[2380,2382],"[screenWidth]",[855,860],"[debounceLoadData, txt]"]