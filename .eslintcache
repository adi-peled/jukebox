[{"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Player\\Player.jsx":"1","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx":"2","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\store.js":"3","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\boxService.js":"4","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx":"5","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\SongPreview\\SongPreview.jsx":"6","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\socketService.js":"7","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\reducers\\boxReducer.js":"8","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\AddSong\\AddSong.jsx":"9","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx":"10","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\boxActions.js":"11","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\App.jsx":"12","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\youtubeService.js":"13","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\index.js":"14","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Login\\Login.jsx":"15","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\Main\\Main.jsx":"16","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\userActions.js":"17","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\utilService.js":"18","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Carousel\\Carousel.jsx":"19"},{"size":7101,"mtime":1611403512225,"results":"20","hashOfConfig":"21"},{"size":13512,"mtime":1611475635851,"results":"22","hashOfConfig":"21"},{"size":553,"mtime":1610283207135,"results":"23","hashOfConfig":"21"},{"size":788,"mtime":1611232992035,"results":"24","hashOfConfig":"21"},{"size":3046,"mtime":1610967500010,"results":"25","hashOfConfig":"21"},{"size":2140,"mtime":1610614503488,"results":"26","hashOfConfig":"21"},{"size":568,"mtime":1611313019488,"results":"27","hashOfConfig":"21"},{"size":1096,"mtime":1610824998627,"results":"28","hashOfConfig":"21"},{"size":1886,"mtime":1610985491884,"results":"29","hashOfConfig":"21"},{"size":1134,"mtime":1611308508375,"results":"30","hashOfConfig":"21"},{"size":3209,"mtime":1611403835088,"results":"31","hashOfConfig":"21"},{"size":3135,"mtime":1611237268127,"results":"32","hashOfConfig":"21"},{"size":2180,"mtime":1610539882163,"results":"33","hashOfConfig":"21"},{"size":647,"mtime":1610655762931,"results":"34","hashOfConfig":"21"},{"size":5081,"mtime":1611042969794,"results":"35","hashOfConfig":"21"},{"size":1104,"mtime":1610985637340,"results":"36","hashOfConfig":"21"},{"size":2044,"mtime":1610966949511,"results":"37","hashOfConfig":"21"},{"size":326,"mtime":1610455580382,"results":"38","hashOfConfig":"21"},{"size":1948,"mtime":1610962734858,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"bdcmg8",{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Player\\Player.jsx",["90","91","92","93","94"],"import React, { useState, useEffect, useRef, createRef } from 'react'\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrSong } from '../../store/actions/boxActions'\r\n//Scss\r\nimport './Player.scss'\r\n//Components \r\nimport Slider from '@material-ui/core/Slider';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n//services\r\nimport { socketService } from '../../services/socketService'\r\n\r\nfunction Player() {\r\n    const dispatch = useDispatch()\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const { currBox } = useSelector(state => state.boxReducer)\r\n    const [volume, setVolume] = useState(0.75)\r\n    const [secPlayed, setSecPlayed] = useState(0)\r\n    const [duration, setDuration] = useState(0)\r\n    const [mute, setMute] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [seeking, setSeeking] = useState(false)\r\n    const elPlayer = createRef()\r\n\r\n    function skipSong(diff) {\r\n        currBox.playList.forEach((song, index) => {\r\n            if (song.id === currSong.id) {\r\n                if (index + diff >= currBox.playList.length) {\r\n                    dispatch(setCurrSong(currBox.playList[0]))\r\n                    socketService.emit('update song', currBox.playList[0])\r\n                } else if (index + diff < 0) {\r\n                    dispatch(setCurrSong(currBox.playList[currBox.playList.length - 1]))\r\n                    socketService.emit('update song', currBox.playList[currBox.playList.length - 1])\r\n                } else {\r\n                    dispatch(setCurrSong(currBox.playList[index + diff]))\r\n                    socketService.emit('update song', currBox.playList[index + diff])\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        if (screenWidth < 850) {\r\n            setVolume(1)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n\r\n\r\n    function handleVolumeChange({ target }, newVal) {\r\n        setVolume(parseFloat(newVal))\r\n    }\r\n    function handleProgress(e) {\r\n        // if (!seeking && !isSyncing) {\r\n        if (!seeking) {\r\n            setSecPlayed(e.playedSeconds)\r\n            // setSecPlayed(playedSeconds)\r\n            // this.props.updateProgress(state.playedSeconds);\r\n        }\r\n    }\r\n\r\n    function handleDuration(e) {\r\n        setDuration(e)\r\n    }\r\n\r\n    function pauseSong() {\r\n        dispatch(setCurrSong(currSong))\r\n        socketService.emit('update song', { ...currSong, isPlaying: currSong.isPlaying })\r\n    }\r\n\r\n    function handleMute() {\r\n        setMute(!mute)\r\n    }\r\n\r\n    function seekTo() {\r\n        elPlayer.seekTo(secPlayed);\r\n    }\r\n\r\n    function handleSeekMouseDown() {\r\n        setSeeking(true)\r\n    }\r\n\r\n    function handleSeekChange({ target }, newVal) {\r\n        setSecPlayed(newVal);\r\n    }\r\n\r\n    function handleSeekMouseUp(e) {\r\n        // var value = e.target.getAttribute('aria-valuenow')\r\n        elPlayer.current.seekTo(parseFloat(secPlayed))\r\n        setSeeking(false)\r\n\r\n        // socketService.emit('update player seek', this.state.secPlayed);\r\n    }\r\n\r\n    function showTime(seconds) {\r\n        var mins;\r\n        var secs;\r\n        if (seconds >= 60) {\r\n            mins = (parseInt(seconds / 60)).toString();\r\n            secs = (parseInt(seconds - mins * 60)).toString().padStart(2, '0');\r\n        } else {\r\n            mins = '0';\r\n            secs = (parseInt(seconds)).toString().padStart(2, '0');\r\n        }\r\n        return `${mins}:${secs}`\r\n    }\r\n    return (\r\n        <div>\r\n            {currSong && <ReactPlayer\r\n                ref={elPlayer}\r\n                className=\"hidden\"\r\n                controls={false}\r\n                playing={currSong.isPlaying}\r\n                url={`https://www.youtube.com/watch?v=${currSong?.videoId}`}\r\n                volume={volume}\r\n                muted={mute}\r\n                onProgress={(e) => handleProgress(e)}\r\n                onDuration={(e) => handleDuration(e)}\r\n                onEnded={() => skipSong(1)}\r\n            />}\r\n            {currSong && <div className={currSong.isPlaying ? \"player bgc-animation\" : \"player \"}>\r\n                <div>\r\n                    <img className=\"player-img\" src={currSong.imgUrl} alt=\"\" />\r\n                    {screenWidth > 850 && <p>{currSong.name}</p>}\r\n                </div>\r\n                {screenWidth > 850 && <div>\r\n                    {showTime(secPlayed)}\r\n                    <Slider className=\"duration-slider\"\r\n                        name=\"played\"\r\n                        min={0}\r\n                        max={duration}\r\n                        onMouseDown={handleSeekMouseDown}\r\n                        onMouseUp={handleSeekMouseUp}\r\n                        onChange={handleSeekChange}\r\n                        onTouchEnd={handleSeekMouseUp}\r\n                        value={secPlayed}\r\n                    />\r\n                    {showTime(duration)}\r\n                </div>}\r\n                {screenWidth < 850 && <div>{showTime(secPlayed)}</div>}\r\n\r\n                <div className=\"player-buttons\">\r\n                    <button onClick={() => skipSong(-1)}>\r\n                        <SkipPreviousIcon />\r\n                    </button>\r\n                    <button onClick={() => pauseSong()}>{currSong?.isPlaying ? <PauseCircleOutlineIcon />\r\n                        : <PlayCircleOutlineIcon />}\r\n                    </button>\r\n                    <button onClick={() => skipSong(1)}>\r\n                        <SkipNextIcon />\r\n                    </button>\r\n                    <button onClick={handleMute}>\r\n                        {mute == true && <VolumeOffIcon />}\r\n                        {mute === false && volume == 0 && <VolumeOffIcon />}\r\n                        {mute === false && volume > 0 && volume < 0.75 && <VolumeDownIcon />}\r\n                        {mute === false && volume >= 0.75 && volume <= 1 && <VolumeUpIcon />}\r\n                    </button>\r\n\r\n                    {screenWidth > 850 && <Slider className=\"volume-slider\"\r\n                        aria-labelledby=\"continuous-slider\"\r\n                        key={`slider`}\r\n                        value={volume}\r\n                        orientation=\"vertical\"\r\n                        min={0}\r\n                        step={0.05}\r\n                        max={1}\r\n                        onChange={handleVolumeChange}\r\n                    />}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player",["95","96"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx",["97","98","99","100","101","102","103"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\store.js",[],["104","105"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\boxService.js",["106","107"],"import img from '../assets/adi.jpeg'\r\nimport httpService from './httpService'\r\n\r\nexport const boxService = {\r\n    getBoxes,\r\n    getBoxById,\r\n    updateBox,\r\n    createBox,\r\n}\r\n\r\nasync function getBoxes(filterBy) {\r\n    if (!filterBy) {\r\n        return await httpService.get('box')\r\n    } else {\r\n        let { genre, name } = filterBy\r\n        if (genre === 'All' || !genre) genre = ''\r\n        if (!name) name = ''\r\n        return await httpService.get('box' + `?genre=${genre}&name=${name}`)\r\n    }\r\n}\r\n\r\n\r\nasync function getBoxById(id) {\r\n    return await httpService.get(`box/${id}`)\r\n}\r\nasync function updateBox(box) {\r\n    const id = box._id\r\n    return await httpService.put(`box/${id}`, box)\r\n}\r\n\r\nasync function createBox(box) {\r\n    return await httpService.post(`box`, box)\r\n}","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx",["108","109","110"],"import React, { useEffect, useState } from 'react'\r\nimport './SocialLinks.scss'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AttachFileSharpIcon from '@material-ui/icons/AttachFileSharp';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { WhatsappShareButton} from \"react-share\";\r\nimport { Button } from '@material-ui/core';\r\nfunction SocialLinks({ showAddSong, onLike, isLiked, setCurrCmp, currCmp }) {\r\n    const url = window.location.href\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isCopied, setIsCopied] = useState(false)\r\n    function copyToClipboard() {\r\n        const el = document.createElement('textarea');\r\n        el.value = url;\r\n        el.setAttribute('readonly', '');\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setIsCopied(true)\r\n        setTimeout(() => {\r\n            setIsCopied(false)\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"social-links flex space-between\">\r\n            <div className=\"social-links__add\">\r\n                {isLiked ? <FavoriteIcon className=\"liked\" onClick={onLike} /> : <FavoriteBorderIcon onClick={onLike} />}\r\n                <AddIcon onClick={() => showAddSong(true)} />\r\n            </div>\r\n\r\n            {screenWidth < 850 && <div className=\"flex social-links__nav-container\">\r\n                <button className={currCmp==='BoxPlayList' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('BoxPlayList')}>Playlist</button>\r\n                <button className={currCmp==='Chat' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('Chat')}>Chat</button>\r\n            </div>}\r\n\r\n            {isCopied && <Alert className=\"social-links__success\" severity=\"success\" >\r\n                success!  Link copied to copy To clipboard\r\n                </Alert>}\r\n            <div className=\"social-links-section-social\">\r\n                <LinkIcon className=\"copy-to-clip\" onClick={copyToClipboard} />\r\n                <WhatsappShareButton url={url} title=\"share music box\"> \r\n                <WhatsAppIcon/>\r\n                </WhatsappShareButton>\r\n                <a href={`https://www.facebook.com/sharer/sharer.php?href=${url}`} target=\"_blank\"> <FacebookIcon /> </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks\r\n",["111","112"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\SongPreview\\SongPreview.jsx",["113","114","115"],"import React, { useState, useEffect, } from 'react'\r\n//Css\r\nimport './SongPreview.scss'\r\n//Components\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport equalizer from '../../assets/img/equalizer.gif'\r\n//redux\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nfunction SongPreview({ song, playSong, deleteSong }) {\r\n    const [isRemoving, setIsRemoving] = useState(false)\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const isSongPlaying = (song.id === currSong?.id) && currSong?.isPlaying;\r\n    const isCurrSong = currSong?.id===song.id? true:false;\r\n    \r\n\r\n    function changeIsRemoving() {\r\n        setIsRemoving(!isRemoving)\r\n        setTimeout(() => {\r\n            setIsRemoving(false)\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div className={isCurrSong? \"flex space-between song-preview active\": \"flex space-between song-preview\"} onDoubleClick={() => playSong(song)}>\r\n            <div className=\"song-preview-left flex\">\r\n                {isSongPlaying ? <PauseCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(currSong)} /> :\r\n                    <PlayCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(song)} />}\r\n                <img className=\"song-preview-img\" src={song.imgUrl} />\r\n                <div>{song.name}</div>\r\n            </div>\r\n            <div className=\"song-preview-right flex\">\r\n                <div className=\"song-preview-duration\">{song.duration}</div>\r\n                {isSongPlaying ? <img className=\"equalizer-gif\" src={equalizer} /> : <div className=\"equalizer-gif\"></div>}\r\n                {isRemoving ? <DeleteOutlineOutlinedIcon  onClick={() => deleteSong(song.id)} className=\"song-preview-svg song-preview-svg--delete\" /> : <MoreVertIcon onClick={changeIsRemoving} className=\"song-preview-svg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongPreview\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\socketService.js",[],["116","117"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\reducers\\boxReducer.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\AddSong\\AddSong.jsx",["118","119","120"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx",["121","122"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n// import playButton from '../../assets/img/play-button.svg'\r\nimport { ReactComponent as PlayButton } from '../../assets/img/play-button.svg'\r\nimport './BoxPreview.scss'\r\nfunction BoxPreview({ box }) {\r\n    const [showName, setShowName] = useState(false)\r\n\r\n    return (\r\n        <Link onMouseLeave={() => setShowName(false)}\r\n            onMouseOver={() => setShowName(true)}\r\n            className='boxPreview flex' to={`/boxDetails/${box._id}`}>\r\n            <PlayButton className=\"play-icon\" />\r\n            {/* <PlayCircleOutlineIcon /> */}\r\n            <img className={showName ? 'boxPreview__img brightness' : 'boxPreview__img'} src={box.imgUrl} />\r\n            <div className=\"boxPreview__info flex\" >\r\n                {!showName && <span className=\"boxPreview__title\">   {box.name}</span>}\r\n                {showName && <span className=\"boxPreview__title fullName\">   {box.name}</span>}\r\n            </div>\r\n\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\nexport default BoxPreview\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\boxActions.js",["123"],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\App.jsx",["124","125","126","127","128","129"],"import react, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { userService } from './services/userService'\r\nimport { utilService } from './services/utilService'\r\nimport { socketService } from './services/socketService'\r\n//cmps\r\nimport Slider, { Range } from 'rc-slider';\r\n\r\nimport Header from './cmps/Header/Header'\r\nimport Main from './pages/Main/Main'\r\nimport Home from './pages/Home/Home';\r\nimport BoxDetails from './pages/BoxDetails/BoxDetails'\r\nimport Player from './cmps/Player/Player'\r\nimport Login from './cmps/Login/Login'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CreateBox from './cmps/CreateBox/CreateBox';\r\n//scss\r\nimport './App.scss';\r\nimport defaultImg from './assets/img/defaultUser.jpg'\r\nfunction App() {\r\n\r\n  const [showCreateBox, setShowCreateBox] = useState(false)\r\n  const [showLogin, setShowLogin] = useState({ show: false, type: '' })\r\n  const [showSuccess, setShowSuccess] = useState(false)\r\n  const { user } = useSelector(state => state.userReducer)\r\n  const dispatch = useDispatch()\r\n  useEffect(async () => {\r\n    // socketService.setup()\r\n    if (!user) {\r\n      const loggedUser = await userService.getUser()\r\n      if (loggedUser) {\r\n        dispatch({ type: 'SET_USER', user: loggedUser })\r\n      } else {\r\n        let guest = sessionStorage.getItem('guest')\r\n        if (!guest) {\r\n          const randomNum = Math.floor(Math.random() * 9999)\r\n          guest = {\r\n            username: `guest_${randomNum}`,\r\n            imgString: defaultImg,\r\n            favs: [],\r\n            isGuest: true,\r\n            _id: utilService.makeId()\r\n          }\r\n          sessionStorage.setItem('guest', JSON.stringify(guest))\r\n          dispatch({ type: 'SET_USER', user: guest })\r\n        } else {\r\n          dispatch({ type: 'SET_USER', user: JSON.parse(guest) })\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header\r\n          toggleShowBox={setShowCreateBox}\r\n          toggleShowLogin={setShowLogin}\r\n        />\r\n        {showCreateBox &&\r\n          < >\r\n            <CreateBox openModal={setShowCreateBox} />\r\n            <div onClick={() => setShowCreateBox(false)} className=\"screen\" />\r\n          </>}\r\n\r\n        {showLogin.show && user.isGuest &&\r\n          <>\r\n            <Login type={showLogin.type} showSuccess={setShowSuccess} />\r\n            <div onClick={() => setShowLogin({ show: false, type: '' })} className=\"screen\" />\r\n          </>}\r\n\r\n        {showSuccess && <Alert className=\"success\" severity=\"success\" >\r\n          success!   you now logged in\r\n                </Alert>}\r\n        <div className=\"app-container\">\r\n          <Switch>\r\n            <Route component={BoxDetails} path=\"/boxDetails/:id\" />\r\n            <Route component={Main} path=\"/main/:genre\" />\r\n            <Route component={Main} path=\"/main\" />\r\n            <Route component={Home} path=\"/\" />\r\n          </Switch>\r\n        </div>\r\n        <Player />\r\n      </Router>\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\youtubeService.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\index.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Login\\Login.jsx",["130","131"],"import React, { useState, useEffect } from 'react'\r\nimport './Login.scss'\r\nimport { signup, login } from '../../store/actions/userActions'\r\nimport { Button, Input } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { ReactComponent as Upload } from '../../assets/upload.svg';\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch } from 'react-redux'\r\n//svg\r\nimport   userSvg  from '../../assets/img/user.svg'\r\n//icons\r\nimport defaultImg from '../../assets/img/defaultUser.jpg'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nfunction Login({ type, showSuccess }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [txt, setTxt] = useState('')\r\n    const [imgString, setImgString] = useState(null)\r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [showInfo, setShowInfo] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUsername('')\r\n        setEmail('')\r\n        setPassword('')\r\n        setTxt('')\r\n    }, [type])\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    function validatePassword(password) {\r\n        var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n        return strongRegex.test(password)\r\n    }\r\n\r\n    const toggleShowPassword = () => {\r\n        passwordType === 'password' ? setPasswordType('text') : setPasswordType('password')\r\n\r\n    }\r\n    function showInfoTimeOut(){\r\n        setShowInfo(true)\r\n        setTimeout(()=>{\r\n            setShowInfo(false)\r\n        },3000)\r\n    }\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!email || !password) {\r\n            setTxt('Fill all inputs')\r\n            return\r\n        }\r\n        let msg\r\n        if (type === 'signup') {\r\n            if (!username) {\r\n                setTxt('Fill all inputs')\r\n                return\r\n            } else {\r\n                if (!validateEmail(email)) {\r\n                    setTxt('email isnt valid')\r\n                    return\r\n                }\r\n                if (!validatePassword(password)) {\r\n                    setTxt('password too weak')\r\n                    return\r\n                }\r\n            }\r\n            if(!imgString) setImgString(defaultImg) \r\n            msg = await dispatch(signup(email, password, username, imgString))\r\n        } else {\r\n            msg = await dispatch(login(email, password))\r\n        }\r\n        setTxt(msg)\r\n        showSuccess(true)\r\n        setTimeout(() => {\r\n            showSuccess(false)\r\n        }, 2000)\r\n    }\r\n    return (\r\n        <form className=\"form  modal flex\">\r\n            <div className=\"title\">\r\n                {type === 'signup' ? 'Sign up' : 'Login'}\r\n            </div>\r\n\r\n            {type === 'signup' && <Input\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(ev) => setUsername(ev.target.value)}\r\n            />}\r\n            <Input\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(ev) => setEmail(ev.target.value)}\r\n            />\r\n\r\n            <div className=\"form__password-container\">\r\n\r\n                <Input\r\n                    placeholder=\"Password\"\r\n                    type={passwordType}\r\n                    value={password}\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n                <InfoOutlinedIcon className=\"infoIcon\" onClick={showInfoTimeOut} />\r\n\r\n                {passwordType === 'password' ?\r\n                    <VisibilityIcon className=\"showIcon\" onClick={() => toggleShowPassword()} /> :\r\n                    <VisibilityOffIcon className=\"showIcon\" onClick={() => toggleShowPassword()} />}\r\n            </div>\r\n            {showInfo && <Alert severity=\"info\" className=\"form__info\" onClick={() => setShowInfo(!showInfo)}>\r\n                at least 1 capital, 1 lower, numbers and 8 digits.\r\n                 </Alert>}\r\n\r\n            {type === 'signup' && <div className=\"form__file-container flex\">\r\n                <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setImgString(base64)} />\r\n                <Upload className={imgString ? \"form__svg opacity-0\" : \"form__svg\"} />\r\n                {imgString && <img className=\"form__img\" src={imgString} />}\r\n            </div>}\r\n\r\n            {   txt && <h3 className=\"form__err\">{txt}</h3>}\r\n\r\n            <Button onClick={(ev) => onSubmit(ev)}>\r\n                {type === 'signup' ? 'Sign up' : 'Login'}\r\n            </Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\pages\\Main\\Main.jsx",["132","133","134"],"import React, { useState, useEffect } from 'react'\r\nimport Filter from '../../cmps/Filter/Filter'\r\nimport BoxList from '../../cmps/BoxList/BoxList'\r\nimport './Main.scss'\r\nimport { CircleLoading } from 'react-loadingg';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setFilter, loadBoxes } from '../../store/actions/boxActions'\r\nfunction Main(props) {\r\n\r\n    const { boxes, filterBy } = useSelector((state) => state.boxReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        let { genre } = props.match.params\r\n        if (!genre) return\r\n        dispatch(setFilter({ genre, name: '' }))\r\n        return () => {\r\n            dispatch(setFilter({ genre: '', name: '' }))\r\n        }\r\n    }, [props.match.params])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBoxes(filterBy))\r\n    }, [filterBy])\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            {!boxes && <CircleLoading />}\r\n            {boxes && <>\r\n                <Filter />\r\n                <BoxList boxes={boxes} />\r\n            </>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\store\\actions\\userActions.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\services\\utilService.js",[],"C:\\Users\\adipeled\\Desktop\\jukebox\\front\\src\\cmps\\Carousel\\Carousel.jsx",["135","136"],{"ruleId":"137","severity":1,"message":"138","line":1,"column":38,"nodeType":"139","messageId":"140","endLine":1,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":57,"column":8,"nodeType":"143","endLine":57,"endColumn":10,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"145","line":85,"column":14,"nodeType":"139","messageId":"140","endLine":85,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":163,"column":31,"nodeType":"148","messageId":"149","endLine":163,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":164,"column":51,"nodeType":"148","messageId":"149","endLine":164,"endColumn":53},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"137","severity":1,"message":"154","line":176,"column":64,"nodeType":"139","messageId":"140","endLine":176,"endColumn":75},{"ruleId":"141","severity":1,"message":"155","line":196,"column":30,"nodeType":"139","endLine":196,"endColumn":41},{"ruleId":"141","severity":1,"message":"156","line":206,"column":8,"nodeType":"143","endLine":206,"endColumn":10,"suggestions":"157"},{"ruleId":"141","severity":1,"message":"158","line":213,"column":8,"nodeType":"143","endLine":213,"endColumn":28,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"160","line":247,"column":8,"nodeType":"143","endLine":247,"endColumn":14,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":263,"column":8,"nodeType":"143","endLine":263,"endColumn":18,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":271,"column":8,"nodeType":"143","endLine":271,"endColumn":17,"suggestions":"165"},{"ruleId":"150","replacedBy":"166"},{"ruleId":"152","replacedBy":"167"},{"ruleId":"137","severity":1,"message":"168","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":18,"column":44,"nodeType":"148","messageId":"171","endLine":18,"endColumn":45},{"ruleId":"137","severity":1,"message":"172","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":27},{"ruleId":"137","severity":1,"message":"173","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":62,"column":84,"nodeType":"176","endLine":62,"endColumn":99},{"ruleId":"150","replacedBy":"177"},{"ruleId":"152","replacedBy":"178"},{"ruleId":"137","severity":1,"message":"179","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":33,"column":17,"nodeType":"182","endLine":33,"endColumn":71},{"ruleId":"180","severity":1,"message":"181","line":38,"column":34,"nodeType":"182","endLine":38,"endColumn":83},{"ruleId":"150","replacedBy":"183"},{"ruleId":"152","replacedBy":"184"},{"ruleId":"141","severity":1,"message":"155","line":11,"column":30,"nodeType":"139","endLine":11,"endColumn":41},{"ruleId":"141","severity":1,"message":"185","line":24,"column":8,"nodeType":"143","endLine":24,"endColumn":13,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"181","line":35,"column":25,"nodeType":"182","endLine":35,"endColumn":96},{"ruleId":"137","severity":1,"message":"187","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":16,"column":13,"nodeType":"182","endLine":16,"endColumn":109},{"ruleId":"137","severity":1,"message":"188","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":23},{"ruleId":"137","severity":1,"message":"189","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"188","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":23},{"ruleId":"137","severity":1,"message":"190","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":14},{"ruleId":"137","severity":1,"message":"191","line":9,"column":18,"nodeType":"139","messageId":"140","endLine":9,"endColumn":23},{"ruleId":"141","severity":1,"message":"192","line":29,"column":13,"nodeType":"193","endLine":53,"endColumn":4},{"ruleId":"141","severity":1,"message":"194","line":53,"column":6,"nodeType":"143","endLine":53,"endColumn":8,"suggestions":"195"},{"ruleId":"137","severity":1,"message":"196","line":10,"column":10,"nodeType":"139","messageId":"140","endLine":10,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":126,"column":31,"nodeType":"182","endLine":126,"endColumn":76},{"ruleId":"137","severity":1,"message":"197","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"198","line":20,"column":8,"nodeType":"143","endLine":20,"endColumn":28,"suggestions":"199"},{"ruleId":"141","severity":1,"message":"198","line":26,"column":8,"nodeType":"143","endLine":26,"endColumn":18,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":47,"column":7,"nodeType":"176","endLine":47,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":63,"column":16,"nodeType":"182","endLine":63,"endColumn":67},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'screenWidth'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'seekTo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'loadBoxChat' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'id' and 'user'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'debounceLoadData', 'dispatch', and 'id'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'newSong'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'getCurrCmp'. Either include it or remove the dependency array.",["210"],["204"],["205"],"'img' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'AttachFileSharpIcon' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["204"],["205"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["204"],["205"],"React Hook useEffect has a missing dependency: 'debounceLoadData'. Either include it or remove the dependency array.",["211"],"'PlayCircleOutlineIcon' is defined but never used.","'socketService' is defined but never used.","'react' is defined but never used.","'Slider' is defined but never used.","'Range' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["212"],"'userSvg' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["213"],["214"],"react/jsx-no-duplicate-props","No duplicate props allowed",{"desc":"215","fix":"216"},"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [screenWidth]",{"range":"235","text":"236"},"Update the dependencies array to be: [dispatch, id]",{"range":"237","text":"238"},"Update the dependencies array to be: [id, user, user.favs.length]",{"range":"239","text":"240"},"Update the dependencies array to be: [debounceLoadData, dispatch, id, user]",{"range":"241","text":"242"},"Update the dependencies array to be: [currSong, newSong]",{"range":"243","text":"244"},"Update the dependencies array to be: [currCmp, getCurrCmp]",{"range":"245","text":"246"},"Update the dependencies array to be: [debounceLoadData, txt]",{"range":"247","text":"248"},"Update the dependencies array to be: [dispatch, user]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, props.match.params]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, filterBy]",{"range":"253","text":"254"},[2532,2534],"[screenWidth]",[8796,8798],"[dispatch, id]",[9002,9022],"[id, user, user.favs.length]",[10338,10344],"[debounceLoadData, dispatch, id, user]",[10848,10858],"[currSong, newSong]",[10989,10998],"[currCmp, getCurrCmp]",[855,860],"[debounceLoadData, txt]",[1959,1961],"[dispatch, user]",[730,750],"[dispatch, props.match.params]",[828,838],"[dispatch, filterBy]"]