[{"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx":"1","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js":"2","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js":"3","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js":"4","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js":"5","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx":"6","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx":"7","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\store.js":"8","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js":"9","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\AddSong\\AddSong.jsx":"10","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx":"11","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx":"12","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js":"13"},{"size":2432,"mtime":1612255693189,"results":"14","hashOfConfig":"15"},{"size":669,"mtime":1611663042388,"results":"16","hashOfConfig":"15"},{"size":313,"mtime":1611662669007,"results":"17","hashOfConfig":"15"},{"size":568,"mtime":1611662669004,"results":"18","hashOfConfig":"15"},{"size":2036,"mtime":1612250519139,"results":"19","hashOfConfig":"15"},{"size":5092,"mtime":1611862795488,"results":"20","hashOfConfig":"15"},{"size":2144,"mtime":1611683845177,"results":"21","hashOfConfig":"15"},{"size":553,"mtime":1611662669007,"results":"22","hashOfConfig":"15"},{"size":629,"mtime":1612252530161,"results":"23","hashOfConfig":"15"},{"size":1886,"mtime":1611662668988,"results":"24","hashOfConfig":"15"},{"size":2087,"mtime":1612254993491,"results":"25","hashOfConfig":"15"},{"size":1134,"mtime":1611662668990,"results":"26","hashOfConfig":"15"},{"size":286,"mtime":1612250519219,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q1608t",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx",["58","59","60"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx",["61","62","63"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Input, TextField } from '@material-ui/core'\r\n\r\nimport './Chat.scss'\r\nfunction Chat({ box, sendMsg, isTyping, typingUser, joinedUser, newSong, userList }) {\r\n    const [msg, setMsg] = useState('')\r\n    const { currBox } = useSelector(state => state.boxReducer)\r\n    const currUser = useSelector(state => state.userReducer.user)\r\n    const chatRef = useRef();\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [currBox?.chat?.length])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n\r\n    function handleInputChange(e) {\r\n        isTyping(currBox, currUser)\r\n        setMsg(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        const minUser = {\r\n            _id: currUser._id,\r\n            username: currUser.username,\r\n            imgString: currUser.imgString\r\n        }\r\n        e.preventDefault()\r\n        let message = {\r\n            text: msg,\r\n            from: minUser,\r\n            toBoxId: currBox._id,\r\n            createdAt: Date.now()\r\n        }\r\n        const data = {\r\n            message,\r\n            currBox\r\n        }\r\n        sendMsg(data)\r\n        setMsg('')\r\n    }\r\n\r\n    function getTime(timestamp) {\r\n        let hour = new Date(timestamp).getHours()\r\n        let minutes = new Date(timestamp).getMinutes()\r\n        hour = hour < 10 ? `0${hour}` : hour\r\n        minutes = minutes < 10 ? `0${minutes}` : minutes\r\n        return `${hour}:${minutes}`\r\n    }\r\n\r\n    function scrollToBottom() {\r\n        chatRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    return (\r\n        <div className={screenWidth > 850 ? \"chat-box flex column \" : \"chat-box chat-box__mobile\"}>\r\n            {screenWidth > 850 &&\r\n                <div className=\"chat-header\">\r\n                    <h2>Chat Box</h2>\r\n                </div>\r\n            }\r\n            {screenWidth > 850 &&\r\n                <ul className=\"users-list\">\r\n                    {userList && userList.map(user => {\r\n                        return <li key={user._id} className=\"user\"><img src={user.imgUrl} /></li>\r\n                    })}\r\n                </ul>}\r\n            <div className=\"chat-box__container\">\r\n                {box && box.chat?.map(msg => {\r\n                    const { username, imgString } = msg.from\r\n                    const isCurrUser = currUser.username === username ? true : false\r\n\r\n                    return <div  key={msg.createdAt} className={isCurrUser? \" rtl chat-box__msg flex\": \"chat-box__msg flex\"}>\r\n                        <img className=\"chat-box__img\" src={imgString} />\r\n                        <div className=\"chat-box__text-container flex\">\r\n                            <span className={isCurrUser ? \" currUser chat-box__username\" : \"chat-box__username\"}>{username} </span>\r\n                            <div className={isCurrUser ? 'user-text chat-box__txt flex' : 'chat-box__txt flex'}>\r\n                                <div className={isCurrUser? \"txt ml\" :\"text mr\"}>  {msg.text}</div>\r\n                                <span className=\"chat-box__time\"> {getTime(msg.createdAt)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    // return <div className={isCurrUser ? 'rtl currUser chat-box__msg  flex' : 'chat-box__msg  flex'} key={msg.createdAt}>\r\n                    //     <div className=\"chat-box__sender flex\">\r\n                    //         {!isCurrUser && <img className=\"chat-box__img\" src={imgString} />}\r\n                    //         {/* {isCurrUser && <span className=\"chat-box__username\">You</span>} */}\r\n                    //         {!isCurrUser && <span className=\"chat-box__username\">{username} </span>}\r\n                    //     </div>\r\n                    //     <div className={isCurrUser ? 'user-text chat-box__txt' : 'chat-box__txt'}>\r\n                    //         <div className=\"txt\">  {msg.text}</div>\r\n                    //         <span className=\"chat-box__time\"> {getTime(msg.createdAt)}</span>\r\n                    //     </div>\r\n                    // </div>\r\n\r\n                })}\r\n                <div ref={chatRef}></div>\r\n                {typingUser && <h3>{typingUser} is typing....</h3>}\r\n                {joinedUser && joinedUser !== currUser.username && <h3>{joinedUser} joined the room</h3>}\r\n                {newSong && <h3>{currUser.username} added new song: {newSong}</h3>}\r\n            </div>\r\n            <form className=\"text-form flex\" onSubmit={(e) => handleSubmit(e)}>\r\n                <Input type=\"text\" onChange={(e) => handleInputChange(e)} value={msg} placeholder=\"Write a message\" />\r\n                {/* <button type=\"submit\">Send</button> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n",["64","65"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx",["66","67","68"],"import React, { useState, useEffect } from 'react'\r\n//Css\r\nimport './SongPreview.scss'\r\n//Components\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport equalizer from '../../assets/img/equalizer.gif'\r\n//redux\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nfunction SongPreview({ song, playSong, deleteSong, idx }) {\r\n    const [isRemoving, setIsRemoving] = useState(false)\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const isSongPlaying = (song.id === currSong?.id) && currSong?.isPlaying;\r\n    const isCurrSong = currSong?.id===song.id? true:false;\r\n    function changeIsRemoving() {\r\n        setIsRemoving(!isRemoving)\r\n        setTimeout(() => {\r\n            setIsRemoving(false)\r\n        }, 3000)\r\n    }\r\n    return (\r\n    \r\n            <div className={isCurrSong? \"flex space-between song-preview active\": \"flex space-between song-preview\"} onDoubleClick={() => playSong(song)}>\r\n            <div className=\"song-preview-left flex\">\r\n                {isSongPlaying ? <PauseCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(currSong)} /> :\r\n                    <PlayCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(song)} />}\r\n                <img className=\"song-preview-img\" src={song.imgUrl} />\r\n                <div>{song.name}</div>\r\n            </div>\r\n            <div className=\"song-preview-right flex\">\r\n                <div className=\"song-preview-duration\">{song.duration}</div>\r\n                {isSongPlaying ? <img className=\"equalizer-gif\" src={equalizer} /> : <div className=\"equalizer-gif\"></div>}\r\n                {isRemoving ? <DeleteOutlineOutlinedIcon  onClick={() => deleteSong(song.id)} className=\"song-preview-svg song-preview-svg--delete\" /> : <MoreVertIcon onClick={changeIsRemoving} className=\"song-preview-svg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongPreview\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\store.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js",["69","70"],"import img from '../assets/adi.jpeg'\r\nimport httpService from './httpService'\r\n\r\nexport const boxService = {\r\n    query,\r\n    getById,\r\n    save\r\n}\r\n\r\nasync function query({ genre = '', name = '' }) {\r\n    return await httpService.get('box' + `?genre=${genre}&name=${name}`)\r\n}\r\n\r\nasync function getById(id) {\r\n    return await httpService.get(`box/${id}`)\r\n}\r\nasync function _update(box) {\r\n    const id = box._id\r\n    return await httpService.put(`box/${id}`, box)\r\n}\r\n\r\nfunction save(box) {\r\n    return box._id ? _update(box) : _create(box)\r\n}\r\n\r\nasync function _create(box) {\r\n    return await httpService.post(`box`, box)\r\n}","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\AddSong\\AddSong.jsx",["71","72","73"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx",["74","75"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx",["76","77"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js",[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":36,"nodeType":"80","messageId":"81","endLine":1,"endColumn":44},{"ruleId":"78","severity":1,"message":"82","line":11,"column":8,"nodeType":"80","messageId":"81","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":25,"column":8,"nodeType":"85","endLine":25,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"87","line":3,"column":17,"nodeType":"80","messageId":"81","endLine":3,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":72,"column":68,"nodeType":"90","endLine":72,"endColumn":93},{"ruleId":"88","severity":1,"message":"89","line":81,"column":25,"nodeType":"90","endLine":81,"endColumn":74},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"78","severity":1,"message":"95","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":31,"column":17,"nodeType":"90","endLine":31,"endColumn":71},{"ruleId":"88","severity":1,"message":"89","line":36,"column":34,"nodeType":"90","endLine":36,"endColumn":83},{"ruleId":"78","severity":1,"message":"96","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":11},{"ruleId":"97","severity":1,"message":"98","line":11,"column":40,"nodeType":"99","messageId":"100","endLine":11,"endColumn":41},{"ruleId":"83","severity":1,"message":"101","line":11,"column":30,"nodeType":"80","endLine":11,"endColumn":41},{"ruleId":"83","severity":1,"message":"102","line":24,"column":8,"nodeType":"85","endLine":24,"endColumn":13,"suggestions":"103"},{"ruleId":"88","severity":1,"message":"89","line":35,"column":25,"nodeType":"90","endLine":35,"endColumn":96},{"ruleId":"104","severity":1,"message":"105","line":51,"column":7,"nodeType":"106","endLine":51,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":68,"column":16,"nodeType":"90","endLine":68,"endColumn":67},{"ruleId":"78","severity":1,"message":"107","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":16,"column":13,"nodeType":"90","endLine":16,"endColumn":109},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'TextField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'useEffect' is defined but never used.","'img' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'debounceLoadData'. Either include it or remove the dependency array.",["111"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PlayCircleOutlineIcon' is defined but never used.",{"desc":"112","fix":"113"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [dispatch]",{"range":"116","text":"117"},"Update the dependencies array to be: [debounceLoadData, txt]",{"range":"118","text":"119"},[1145,1147],"[dispatch]",[855,860],"[debounceLoadData, txt]"]