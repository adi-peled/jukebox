[{"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx":"1","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js":"2","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js":"3","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js":"4","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPlayList\\BoxPlayList.jsx":"5","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx":"6","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\utilService.js":"7","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx":"8","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx":"9","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js":"10","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\App.jsx":"11","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\boxActions.js":"12","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Player\\Player.jsx":"13","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Header\\Header.jsx":"14","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js":"15","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js":"16","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx":"17","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx":"18","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxInfo\\BoxInfo.jsx":"19","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx":"20","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\boxReducer.js":"21","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\httpService.js":"22","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Login\\Login.jsx":"23","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\youtubeService.js":"24"},{"size":7210,"mtime":1612253784795,"results":"25","hashOfConfig":"26"},{"size":669,"mtime":1611663042388,"results":"27","hashOfConfig":"26"},{"size":286,"mtime":1612249075206,"results":"28","hashOfConfig":"26"},{"size":2036,"mtime":1612250519139,"results":"29","hashOfConfig":"26"},{"size":2351,"mtime":1611683845173,"results":"30","hashOfConfig":"26"},{"size":1134,"mtime":1611662668990,"results":"31","hashOfConfig":"26"},{"size":326,"mtime":1611662669005,"results":"32","hashOfConfig":"26"},{"size":3046,"mtime":1611662668995,"results":"33","hashOfConfig":"26"},{"size":2144,"mtime":1611683845177,"results":"34","hashOfConfig":"26"},{"size":568,"mtime":1611662669004,"results":"35","hashOfConfig":"26"},{"size":3105,"mtime":1612249547457,"results":"36","hashOfConfig":"26"},{"size":3175,"mtime":1612252532546,"results":"37","hashOfConfig":"26"},{"size":7575,"mtime":1611783617763,"results":"38","hashOfConfig":"26"},{"size":4052,"mtime":1611662668993,"results":"39","hashOfConfig":"26"},{"size":635,"mtime":1612252407412,"results":"40","hashOfConfig":"26"},{"size":313,"mtime":1611662669007,"results":"41","hashOfConfig":"26"},{"size":2087,"mtime":1612254993491,"results":"42","hashOfConfig":"26"},{"size":5092,"mtime":1611862795488,"results":"43","hashOfConfig":"26"},{"size":748,"mtime":1611840390150,"results":"44","hashOfConfig":"26"},{"size":2433,"mtime":1612252949923,"results":"45","hashOfConfig":"26"},{"size":1096,"mtime":1611662669007,"results":"46","hashOfConfig":"26"},{"size":892,"mtime":1611662669004,"results":"47","hashOfConfig":"26"},{"size":5081,"mtime":1611662668994,"results":"48","hashOfConfig":"26"},{"size":1420,"mtime":1612199575818,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q1608t",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\BoxDetails\\BoxDetails.jsx",["115","116","117","118","119","120","121"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\index.js",[],["122","123"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\userService.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\userActions.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPlayList\\BoxPlayList.jsx",["124"],"import React, { useEffect, useState } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './BoxPlayList.scss'\r\nimport SongPreview from '../SongPreview/SongPreview'\r\nfunction BoxPlayList({box, playSong, deleteSong, reorder}) {\r\n\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isMobile, setIsMobile] = useState(false)\r\n  \r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        if (screenWidth < 850) {\r\n            setIsMobile(true)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n   \r\n    function onDragEnd(e){\r\n        const startPoint = e.source.index\r\n        const endPoint = e.destination\r\n        if(!endPoint) return\r\n        reorder(box.playList, startPoint, endPoint)\r\n    }\r\n    return (\r\n    <DragDropContext\r\n                onDragEnd={(e)=>onDragEnd(e)}\r\n            >\r\n        <Droppable droppableId={'songPick'}>\r\n        {(provided) => (\r\n                <ul \r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                className=\"playlist\">\r\n                {provided.placeholder}\r\n                {box&& box.playList.map((song, idx)=>{\r\n                    return(\r\n                            <Draggable\r\n                            key={song.id}\r\n                            draggableId={song.videoId} \r\n                            index={idx}\r\n                            isDragDisabled={isMobile}\r\n                            >\r\n                                {provided =>(\r\n                                <li \r\n                                key={idx}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}>\r\n                                    <SongPreview  idx={idx} song={song} playSong={playSong} deleteSong={deleteSong} />\r\n                                </li>\r\n                                )}\r\n                    </Draggable>\r\n                    )\r\n                })}\r\n            </ul>)\r\n            }\r\n        </Droppable>\r\n    </DragDropContext >\r\n\r\n    )\r\n}\r\n\r\nexport default BoxPlayList\r\n",["125","126"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxPreview\\BoxPreview.jsx",["127","128"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n// import playButton from '../../assets/img/play-button.svg'\r\nimport { ReactComponent as PlayButton } from '../../assets/img/play-button.svg'\r\nimport './BoxPreview.scss'\r\nfunction BoxPreview({ box }) {\r\n    const [showName, setShowName] = useState(false)\r\n\r\n    return (\r\n        <Link onMouseLeave={() => setShowName(false)}\r\n            onMouseOver={() => setShowName(true)}\r\n            className='boxPreview flex' to={`/boxDetails/${box._id}`}>\r\n            <PlayButton className=\"play-icon\" />\r\n            {/* <PlayCircleOutlineIcon /> */}\r\n            <img className={showName ? 'boxPreview__img brightness' : 'boxPreview__img'} src={box.imgUrl} />\r\n            <div className=\"boxPreview__info flex\" >\r\n                {!showName && <span className=\"boxPreview__title\">   {box.name}</span>}\r\n                {showName && <span className=\"boxPreview__title fullName\">   {box.name}</span>}\r\n            </div>\r\n\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\nexport default BoxPreview\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\utilService.js",[],["129","130"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SocialLinks\\SocialLinks.jsx",["131","132","133"],"import React, { useEffect, useState } from 'react'\r\nimport './SocialLinks.scss'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AttachFileSharpIcon from '@material-ui/icons/AttachFileSharp';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { WhatsappShareButton} from \"react-share\";\r\nimport { Button } from '@material-ui/core';\r\nfunction SocialLinks({ showAddSong, onLike, isLiked, setCurrCmp, currCmp }) {\r\n    const url = window.location.href\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isCopied, setIsCopied] = useState(false)\r\n    function copyToClipboard() {\r\n        const el = document.createElement('textarea');\r\n        el.value = url;\r\n        el.setAttribute('readonly', '');\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setIsCopied(true)\r\n        setTimeout(() => {\r\n            setIsCopied(false)\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"social-links flex space-between\">\r\n            <div className=\"social-links__add\">\r\n                {isLiked ? <FavoriteIcon className=\"liked\" onClick={onLike} /> : <FavoriteBorderIcon onClick={onLike} />}\r\n                <AddIcon onClick={() => showAddSong(true)} />\r\n            </div>\r\n\r\n            {screenWidth < 850 && <div className=\"flex social-links__nav-container\">\r\n                <button className={currCmp==='BoxPlayList' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('BoxPlayList')}>Playlist</button>\r\n                <button className={currCmp==='Chat' ? \"social-links__nav-btn active\" : \"social-links__nav-btn\"} onClick={()=>setCurrCmp('Chat')}>Chat</button>\r\n            </div>}\r\n\r\n            {isCopied && <Alert className=\"social-links__success\" severity=\"success\" >\r\n                success!  Link copied to copy To clipboard\r\n                </Alert>}\r\n            <div className=\"social-links-section-social\">\r\n                <LinkIcon className=\"copy-to-clip\" onClick={copyToClipboard} />\r\n                <WhatsappShareButton url={url} title=\"share music box\"> \r\n                <WhatsAppIcon/>\r\n                </WhatsappShareButton>\r\n                <a href={`https://www.facebook.com/sharer/sharer.php?href=${url}`} target=\"_blank\"> <FacebookIcon /> </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks\r\n",["134","135"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\SongPreview\\SongPreview.jsx",["136","137","138"],"import React, { useState, useEffect } from 'react'\r\n//Css\r\nimport './SongPreview.scss'\r\n//Components\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport equalizer from '../../assets/img/equalizer.gif'\r\n//redux\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nfunction SongPreview({ song, playSong, deleteSong, idx }) {\r\n    const [isRemoving, setIsRemoving] = useState(false)\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const isSongPlaying = (song.id === currSong?.id) && currSong?.isPlaying;\r\n    const isCurrSong = currSong?.id===song.id? true:false;\r\n    function changeIsRemoving() {\r\n        setIsRemoving(!isRemoving)\r\n        setTimeout(() => {\r\n            setIsRemoving(false)\r\n        }, 3000)\r\n    }\r\n    return (\r\n    \r\n            <div className={isCurrSong? \"flex space-between song-preview active\": \"flex space-between song-preview\"} onDoubleClick={() => playSong(song)}>\r\n            <div className=\"song-preview-left flex\">\r\n                {isSongPlaying ? <PauseCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(currSong)} /> :\r\n                    <PlayCircleOutlineIcon className=\"song-preview-svg\" onClick={() => playSong(song)} />}\r\n                <img className=\"song-preview-img\" src={song.imgUrl} />\r\n                <div>{song.name}</div>\r\n            </div>\r\n            <div className=\"song-preview-right flex\">\r\n                <div className=\"song-preview-duration\">{song.duration}</div>\r\n                {isSongPlaying ? <img className=\"equalizer-gif\" src={equalizer} /> : <div className=\"equalizer-gif\"></div>}\r\n                {isRemoving ? <DeleteOutlineOutlinedIcon  onClick={() => deleteSong(song.id)} className=\"song-preview-svg song-preview-svg--delete\" /> : <MoreVertIcon onClick={changeIsRemoving} className=\"song-preview-svg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongPreview\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\socketService.js",[],["139","140"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\App.jsx",["141","142","143","144","145","146"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\actions\\boxActions.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Player\\Player.jsx",["147","148","149","150","151","152"],"import React, { useState, useEffect, createRef } from 'react'\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrSong, updateProgress } from '../../store/actions/boxActions'\r\n//Scss\r\nimport './Player.scss'\r\n//Components \r\nimport Slider from '@material-ui/core/Slider';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n//services\r\nimport { socketService } from '../../services/socketService'\r\n\r\nfunction Player() {\r\n    const dispatch = useDispatch()\r\n    const { currSong } = useSelector(state => state.boxReducer)\r\n    const { currBox } = useSelector(state => state.boxReducer)\r\n    const [volume, setVolume] = useState(0.75)\r\n    const [secPlayed, setSecPlayed] = useState(0)\r\n    const [duration, setDuration] = useState(0)\r\n    const [mute, setMute] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [seeking, setSeeking] = useState(false)\r\n    const [newBox, setNewBox] = useState(null)\r\n    const elPlayer = createRef()\r\n\r\n    function skipSong(diff) {\r\n        currBox.playList.forEach((song, index) => {\r\n            if (song.id === currSong.id) {\r\n                if (index + diff >= currBox.playList.length) {\r\n                    dispatch(setCurrSong(currBox.playList[0]))\r\n                    socketService.emit('update song', currBox.playList[0])\r\n                } else if (index + diff < 0) {\r\n                    dispatch(setCurrSong(currBox.playList[currBox.playList.length - 1]))\r\n                    socketService.emit('update song', currBox.playList[currBox.playList.length - 1])\r\n                } else {\r\n                    dispatch(setCurrSong(currBox.playList[index + diff]))\r\n                    socketService.emit('update song', currBox.playList[index + diff])\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        if (screenWidth < 850) {\r\n            setVolume(1)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currBox) {\r\n\r\n        }\r\n    }, [currBox])\r\n\r\n    function handleVolumeChange({ target }, newVal) {\r\n        setVolume(parseFloat(newVal))\r\n    }\r\n\r\n    function handleProgress(e) {\r\n        // if (!seeking && !isSyncing) {\r\n        if (!seeking) {\r\n            setSecPlayed(e.playedSeconds)\r\n            // if (currBox._id !== newBox._id) setNewBox(currBox)\r\n            dispatch(updateProgress((e.playedSeconds)))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currSong) {\r\n            // setSecPlayed(currSong.secPlayed)\r\n            seekTo(currSong.secPlayed)\r\n        }\r\n    }, [currSong])\r\n\r\n    function handleDuration(e) {\r\n        setDuration(e)\r\n    }\r\n\r\n    function pauseSong() {\r\n        dispatch(setCurrSong(currSong))\r\n        socketService.emit('update song', { ...currSong, isPlaying: currSong.isPlaying })\r\n    }\r\n\r\n    function handleMute() {\r\n        setMute(!mute)\r\n    }\r\n\r\n    function seekTo(sec) {\r\n        if (sec !== secPlayed) {\r\n            elPlayer.current.seekTo(parseFloat(sec), 'seconds');\r\n        }\r\n    }\r\n\r\n    function handleSeekMouseDown() {\r\n        setSeeking(true)\r\n    }\r\n\r\n    function handleSeekChange({ target }, newVal) {\r\n        setSecPlayed(newVal);\r\n    }\r\n\r\n    function handleSeekMouseUp(e) {\r\n        elPlayer.current.seekTo(parseFloat(secPlayed))\r\n        const song = { ...currSong, secPlayed, isPlaying: !currSong.isPlaying }\r\n        dispatch(setCurrSong(song))\r\n        socketService.emit('update song', song)\r\n        setSeeking(false)\r\n    }\r\n\r\n    function showTime(seconds) {\r\n        var mins;\r\n        var secs;\r\n        if (seconds >= 60) {\r\n            mins = (parseInt(seconds / 60)).toString();\r\n            secs = (parseInt(seconds - mins * 60)).toString().padStart(2, '0');\r\n        } else {\r\n            mins = '0';\r\n            secs = (parseInt(seconds)).toString().padStart(2, '0');\r\n        }\r\n        return `${mins}:${secs}`\r\n    }\r\n    return (\r\n        <div>\r\n            {currSong && <ReactPlayer\r\n                ref={elPlayer}\r\n                className=\"hidden\"\r\n                playsinline={true}\r\n                controls={false}\r\n                playing={currSong.isPlaying}\r\n                url={`https://www.youtube.com/watch?v=${currSong?.videoId}`}\r\n                volume={volume}\r\n                muted={mute}\r\n                onProgress={(e) => handleProgress(e)}\r\n                onDuration={(e) => handleDuration(e)}\r\n                onEnded={() => skipSong(1)}\r\n            />}\r\n            {currSong && <div className={currSong.isPlaying ? \"player bgc-animation\" : \"player \"}>\r\n                <div>\r\n                    <img className=\"player-img\" src={currSong.imgUrl} alt=\"\" />\r\n                    {screenWidth > 850 && <p>{currSong.name}</p>}\r\n                </div>\r\n                {screenWidth > 850 && <div>\r\n                    {showTime(secPlayed)}\r\n                    <Slider className=\"duration-slider\"\r\n                        name=\"played\"\r\n                        min={0}\r\n                        max={duration}\r\n                        onMouseDown={handleSeekMouseDown}\r\n                        onMouseUp={handleSeekMouseUp}\r\n                        onChange={handleSeekChange}\r\n                        onTouchEnd={handleSeekMouseUp}\r\n                        value={secPlayed}\r\n                    />\r\n                    {showTime(duration)}\r\n                </div>}\r\n                {screenWidth < 850 && <div>{showTime(secPlayed)}</div>}\r\n\r\n                <div className=\"player-buttons\">\r\n                    <button onClick={() => skipSong(-1)}>\r\n                        <SkipPreviousIcon />\r\n                    </button>\r\n                    <button onClick={() => pauseSong()}>{currSong?.isPlaying ? <PauseCircleOutlineIcon />\r\n                        : <PlayCircleOutlineIcon />}\r\n                    </button>\r\n                    <button onClick={() => skipSong(1)}>\r\n                        <SkipNextIcon />\r\n                    </button>\r\n                    <button onClick={handleMute}>\r\n                        {mute == true && <VolumeOffIcon />}\r\n                        {mute === false && volume == 0 && <VolumeOffIcon />}\r\n                        {mute === false && volume > 0 && volume < 0.75 && <VolumeDownIcon />}\r\n                        {mute === false && volume >= 0.75 && volume <= 1 && <VolumeUpIcon />}\r\n                    </button>\r\n\r\n                    {screenWidth > 850 && <Slider className=\"volume-slider\"\r\n                        aria-labelledby=\"continuous-slider\"\r\n                        key={`slider`}\r\n                        value={volume}\r\n                        orientation=\"vertical\"\r\n                        min={0}\r\n                        step={0.05}\r\n                        max={1}\r\n                        onChange={handleVolumeChange}\r\n                    />}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n\r\n//maor!!",["153","154"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Header\\Header.jsx",["155"],"import React, { useEffect, useState } from 'react'\r\nimport './Header.scss'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadLoggedUser, signout } from '../../store/actions/userActions'\r\nimport { setFilter } from '../../store/actions/boxActions'\r\n//icons\r\nimport jukeBox from '../../assets/img/equalizerLogo.png'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nfunction Header({ toggleShowBox, toggleShowLogin }) {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector(state => state.userReducer)\r\n    const [showProfileMenu, setShowProfileMenu] = useState(false)\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n    const [isScroll, setIsScroll] = useState(false)\r\n\r\n    function onScroll() {\r\n        if (window.scrollY > 0) {\r\n            setIsScroll(true)\r\n        }\r\n        else {\r\n            setIsScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // dispatch(loadLoggedUser())\r\n        window.addEventListener(\"scroll\", onScroll)\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n    }, [])\r\n\r\n\r\n    function onSearch(txt) {\r\n        history.push(`/main`)\r\n        dispatch(setFilter({ name: txt, genre: '' }))\r\n    }\r\n\r\n\r\n    return (\r\n        <header onScroll={onScroll} className={isScroll ? \"header flex sticky\" : \"header flex \"}>\r\n            <img className=\"header__logo\" src={jukeBox} alt=\"logo\" onClick={() => history.push('/')} />\r\n            <div className=\"header__input-container flex\">\r\n                <input\r\n                    className=\"header__input-container--search\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(ev) => onSearch(ev.target.value)}\r\n                />\r\n                <SearchIcon className=\"header__input-container--icon\" />\r\n            </div>\r\n            <ul className=\"header__nav flex\">\r\n                <div className=\"relative\">\r\n                    {screenWidth < 600 && <>\r\n                        <MenuIcon className=\"header__menu-icon\" onClick={() => setShowMenu(!showMenu)} />\r\n                        {showMenu && <div onClick={() => setShowMenu(false)} className=\"screen\" />}\r\n\r\n                    </>\r\n                    }\r\n                    {(screenWidth >= 600 || showMenu) && <div className={screenWidth < 600 ? 'menu' : 'flex'}>\r\n\r\n                        <li className=\"header__item--menu\">\r\n                            <NavLink to=\"/main\" className=\"header__link\" exact >Boxes</NavLink>\r\n                        </li>\r\n                        <li className=\"header__item--menu\" onClick={() => toggleShowBox(true)}>\r\n                            New Box\r\n                       </li>\r\n                    </div>}\r\n\r\n                </div>\r\n\r\n                <li className=\"header__item\">\r\n                    <PersonIcon className=\"header__profile\" onClick={() => setShowProfileMenu(!showProfileMenu)} />\r\n                    {showProfileMenu && <>\r\n                        <ul className=\"profile__list\">\r\n                            {(!user|| user.isGuest) && <>\r\n                                <li onClick={() => toggleShowLogin({ show: true, type: 'signup' })} className=\"profile__item\">Signup</li>\r\n                                <li onClick={() => toggleShowLogin({ show: true, type: 'login' })} className=\"profile__item\">Login</li>\r\n                            </>}\r\n                            {(user&& !user.isGuest)  && <li onClick={() => dispatch(signout())} className=\"profile__item\">Logout</li>}\r\n                        </ul>\r\n                        <div onClick={() => setShowProfileMenu(false)} className=\"screen\" />\r\n                    </>\r\n                    }\r\n                </li>\r\n            </ul>\r\n\r\n\r\n\r\n\r\n\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\boxService.js",["156","157"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\userReducer.js",[],["158","159"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Carousel\\Carousel.jsx",["160","161"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Chat\\Chat.jsx",["162","163","164"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Input, TextField } from '@material-ui/core'\r\n\r\nimport './Chat.scss'\r\nfunction Chat({ box, sendMsg, isTyping, typingUser, joinedUser, newSong, userList }) {\r\n    const [msg, setMsg] = useState('')\r\n    const { currBox } = useSelector(state => state.boxReducer)\r\n    const currUser = useSelector(state => state.userReducer.user)\r\n    const chatRef = useRef();\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [currBox?.chat?.length])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n        return () => {\r\n            window.removeEventListener('resize', () => setScreenWidth(window.innerWidth))\r\n        }\r\n    }, [])\r\n\r\n    function handleInputChange(e) {\r\n        isTyping(currBox, currUser)\r\n        setMsg(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        const minUser = {\r\n            _id: currUser._id,\r\n            username: currUser.username,\r\n            imgString: currUser.imgString\r\n        }\r\n        e.preventDefault()\r\n        let message = {\r\n            text: msg,\r\n            from: minUser,\r\n            toBoxId: currBox._id,\r\n            createdAt: Date.now()\r\n        }\r\n        const data = {\r\n            message,\r\n            currBox\r\n        }\r\n        sendMsg(data)\r\n        setMsg('')\r\n    }\r\n\r\n    function getTime(timestamp) {\r\n        let hour = new Date(timestamp).getHours()\r\n        let minutes = new Date(timestamp).getMinutes()\r\n        hour = hour < 10 ? `0${hour}` : hour\r\n        minutes = minutes < 10 ? `0${minutes}` : minutes\r\n        return `${hour}:${minutes}`\r\n    }\r\n\r\n    function scrollToBottom() {\r\n        chatRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    return (\r\n        <div className={screenWidth > 850 ? \"chat-box flex column \" : \"chat-box chat-box__mobile\"}>\r\n            {screenWidth > 850 &&\r\n                <div className=\"chat-header\">\r\n                    <h2>Chat Box</h2>\r\n                </div>\r\n            }\r\n            {screenWidth > 850 &&\r\n                <ul className=\"users-list\">\r\n                    {userList && userList.map(user => {\r\n                        return <li key={user._id} className=\"user\"><img src={user.imgUrl} /></li>\r\n                    })}\r\n                </ul>}\r\n            <div className=\"chat-box__container\">\r\n                {box && box.chat?.map(msg => {\r\n                    const { username, imgString } = msg.from\r\n                    const isCurrUser = currUser.username === username ? true : false\r\n\r\n                    return <div  key={msg.createdAt} className={isCurrUser? \" rtl chat-box__msg flex\": \"chat-box__msg flex\"}>\r\n                        <img className=\"chat-box__img\" src={imgString} />\r\n                        <div className=\"chat-box__text-container flex\">\r\n                            <span className={isCurrUser ? \" currUser chat-box__username\" : \"chat-box__username\"}>{username} </span>\r\n                            <div className={isCurrUser ? 'user-text chat-box__txt flex' : 'chat-box__txt flex'}>\r\n                                <div className={isCurrUser? \"txt ml\" :\"text mr\"}>  {msg.text}</div>\r\n                                <span className=\"chat-box__time\"> {getTime(msg.createdAt)}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    // return <div className={isCurrUser ? 'rtl currUser chat-box__msg  flex' : 'chat-box__msg  flex'} key={msg.createdAt}>\r\n                    //     <div className=\"chat-box__sender flex\">\r\n                    //         {!isCurrUser && <img className=\"chat-box__img\" src={imgString} />}\r\n                    //         {/* {isCurrUser && <span className=\"chat-box__username\">You</span>} */}\r\n                    //         {!isCurrUser && <span className=\"chat-box__username\">{username} </span>}\r\n                    //     </div>\r\n                    //     <div className={isCurrUser ? 'user-text chat-box__txt' : 'chat-box__txt'}>\r\n                    //         <div className=\"txt\">  {msg.text}</div>\r\n                    //         <span className=\"chat-box__time\"> {getTime(msg.createdAt)}</span>\r\n                    //     </div>\r\n                    // </div>\r\n\r\n                })}\r\n                <div ref={chatRef}></div>\r\n                {typingUser && <h3>{typingUser} is typing....</h3>}\r\n                {joinedUser && joinedUser !== currUser.username && <h3>{joinedUser} joined the room</h3>}\r\n                {newSong && <h3>{currUser.username} added new song: {newSong}</h3>}\r\n            </div>\r\n            <form className=\"text-form flex\" onSubmit={(e) => handleSubmit(e)}>\r\n                <Input type=\"text\" onChange={(e) => handleInputChange(e)} value={msg} placeholder=\"Write a message\" />\r\n                {/* <button type=\"submit\">Send</button> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n",["165","166"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\BoxInfo\\BoxInfo.jsx",["167"],"import React from 'react'\r\nimport './BoxInfo.scss'\r\n\r\nfunction BoxInfo({ box }) {\r\n    return (\r\n        <div className=\"box-info flex\">\r\n          <section></section>\r\n                <img className=\"box-info__img\" src={box.imgUrl} />\r\n       \r\n            <div className=\"box-info__details\">\r\n                <h3 className=\"title\">\r\n                    {box.name}\r\n                </h3>\r\n                <p className=\"box-info__desc\">\r\n                    {box.desc}\r\n                </p>\r\n                <span className=\"box-info__genre\">  {box.genre}</span>\r\n                <p className=\"box-info__createdBy\">created by: {box.createdBy ? box.createdBy : 'guest'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoxInfo\r\n\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\pages\\Home\\Home.jsx",["168","169","170"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\store\\reducers\\boxReducer.js",[],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\httpService.js",["171"],"D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\cmps\\Login\\Login.jsx",["172","173"],"import React, { useState, useEffect } from 'react'\r\nimport './Login.scss'\r\nimport { signup, login } from '../../store/actions/userActions'\r\nimport { Button, Input } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { ReactComponent as Upload } from '../../assets/upload.svg';\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch } from 'react-redux'\r\n//svg\r\nimport   userSvg  from '../../assets/img/user.svg'\r\n//icons\r\nimport defaultImg from '../../assets/img/defaultUser.jpg'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nfunction Login({ type, showSuccess }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [txt, setTxt] = useState('')\r\n    const [imgString, setImgString] = useState(null)\r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [showInfo, setShowInfo] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUsername('')\r\n        setEmail('')\r\n        setPassword('')\r\n        setTxt('')\r\n    }, [type])\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    function validatePassword(password) {\r\n        var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n        return strongRegex.test(password)\r\n    }\r\n\r\n    const toggleShowPassword = () => {\r\n        passwordType === 'password' ? setPasswordType('text') : setPasswordType('password')\r\n\r\n    }\r\n    function showInfoTimeOut(){\r\n        setShowInfo(true)\r\n        setTimeout(()=>{\r\n            setShowInfo(false)\r\n        },3000)\r\n    }\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!email || !password) {\r\n            setTxt('Fill all inputs')\r\n            return\r\n        }\r\n        let msg\r\n        if (type === 'signup') {\r\n            if (!username) {\r\n                setTxt('Fill all inputs')\r\n                return\r\n            } else {\r\n                if (!validateEmail(email)) {\r\n                    setTxt('email isnt valid')\r\n                    return\r\n                }\r\n                if (!validatePassword(password)) {\r\n                    setTxt('password too weak')\r\n                    return\r\n                }\r\n            }\r\n            if(!imgString) setImgString(defaultImg) \r\n            msg = await dispatch(signup(email, password, username, imgString))\r\n        } else {\r\n            msg = await dispatch(login(email, password))\r\n        }\r\n        setTxt(msg)\r\n        showSuccess(true)\r\n        setTimeout(() => {\r\n            showSuccess(false)\r\n        }, 2000)\r\n    }\r\n    return (\r\n        <form className=\"form  modal flex\">\r\n            <div className=\"title\">\r\n                {type === 'signup' ? 'Sign up' : 'Login'}\r\n            </div>\r\n\r\n            {type === 'signup' && <Input\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(ev) => setUsername(ev.target.value)}\r\n            />}\r\n            <Input\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(ev) => setEmail(ev.target.value)}\r\n            />\r\n\r\n            <div className=\"form__password-container\">\r\n\r\n                <Input\r\n                    placeholder=\"Password\"\r\n                    type={passwordType}\r\n                    value={password}\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n                <InfoOutlinedIcon className=\"infoIcon\" onClick={showInfoTimeOut} />\r\n\r\n                {passwordType === 'password' ?\r\n                    <VisibilityIcon className=\"showIcon\" onClick={() => toggleShowPassword()} /> :\r\n                    <VisibilityOffIcon className=\"showIcon\" onClick={() => toggleShowPassword()} />}\r\n            </div>\r\n            {showInfo && <Alert severity=\"info\" className=\"form__info\" onClick={() => setShowInfo(!showInfo)}>\r\n                at least 1 capital, 1 lower, numbers and 8 digits.\r\n                 </Alert>}\r\n\r\n            {type === 'signup' && <div className=\"form__file-container flex\">\r\n                <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setImgString(base64)} />\r\n                <Upload className={imgString ? \"form__svg opacity-0\" : \"form__svg\"} />\r\n                {imgString && <img className=\"form__img\" src={imgString} />}\r\n            </div>}\r\n\r\n            {   txt && <h3 className=\"form__err\">{txt}</h3>}\r\n\r\n            <Button onClick={(ev) => onSubmit(ev)}>\r\n                {type === 'signup' ? 'Sign up' : 'Login'}\r\n            </Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Full Stack web developer projects\\jukebox-full app\\front\\src\\services\\youtubeService.js",[],{"ruleId":"174","severity":1,"message":"175","line":15,"column":64,"nodeType":"176","messageId":"177","endLine":15,"endColumn":75},{"ruleId":"178","severity":1,"message":"179","line":34,"column":30,"nodeType":"176","endLine":34,"endColumn":41},{"ruleId":"178","severity":1,"message":"180","line":51,"column":8,"nodeType":"181","endLine":51,"endColumn":10,"suggestions":"182"},{"ruleId":"178","severity":1,"message":"183","line":58,"column":8,"nodeType":"181","endLine":58,"endColumn":28,"suggestions":"184"},{"ruleId":"178","severity":1,"message":"185","line":99,"column":8,"nodeType":"181","endLine":99,"endColumn":14,"suggestions":"186"},{"ruleId":"178","severity":1,"message":"187","line":115,"column":8,"nodeType":"181","endLine":115,"endColumn":18,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"189","line":123,"column":8,"nodeType":"181","endLine":123,"endColumn":17,"suggestions":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"178","severity":1,"message":"195","line":18,"column":8,"nodeType":"181","endLine":18,"endColumn":10,"suggestions":"196"},{"ruleId":"191","replacedBy":"197"},{"ruleId":"193","replacedBy":"198"},{"ruleId":"174","severity":1,"message":"199","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":16,"column":13,"nodeType":"202","endLine":16,"endColumn":109},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"174","severity":1,"message":"205","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"174","severity":1,"message":"206","line":13,"column":10,"nodeType":"176","messageId":"177","endLine":13,"endColumn":16},{"ruleId":"207","severity":1,"message":"208","line":62,"column":84,"nodeType":"209","endLine":62,"endColumn":99},{"ruleId":"191","replacedBy":"210"},{"ruleId":"193","replacedBy":"211"},{"ruleId":"174","severity":1,"message":"212","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"201","line":31,"column":17,"nodeType":"202","endLine":31,"endColumn":71},{"ruleId":"200","severity":1,"message":"201","line":36,"column":34,"nodeType":"202","endLine":36,"endColumn":83},{"ruleId":"191","replacedBy":"213"},{"ruleId":"193","replacedBy":"214"},{"ruleId":"174","severity":1,"message":"215","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"216","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":23},{"ruleId":"174","severity":1,"message":"217","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},{"ruleId":"174","severity":1,"message":"218","line":9,"column":18,"nodeType":"176","messageId":"177","endLine":9,"endColumn":23},{"ruleId":"178","severity":1,"message":"219","line":30,"column":13,"nodeType":"220","endLine":54,"endColumn":4},{"ruleId":"178","severity":1,"message":"221","line":54,"column":6,"nodeType":"181","endLine":54,"endColumn":8,"suggestions":"222"},{"ruleId":"174","severity":1,"message":"223","line":30,"column":12,"nodeType":"176","messageId":"177","endLine":30,"endColumn":18},{"ruleId":"174","severity":1,"message":"224","line":30,"column":20,"nodeType":"176","messageId":"177","endLine":30,"endColumn":29},{"ruleId":"178","severity":1,"message":"195","line":58,"column":8,"nodeType":"181","endLine":58,"endColumn":10,"suggestions":"225"},{"ruleId":"178","severity":1,"message":"226","line":84,"column":8,"nodeType":"181","endLine":84,"endColumn":18,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":180,"column":31,"nodeType":"230","messageId":"231","endLine":180,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":181,"column":51,"nodeType":"230","messageId":"231","endLine":181,"endColumn":53},{"ruleId":"191","replacedBy":"232"},{"ruleId":"193","replacedBy":"233"},{"ruleId":"174","severity":1,"message":"234","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":24},{"ruleId":"174","severity":1,"message":"235","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":11,"column":40,"nodeType":"230","messageId":"238","endLine":11,"endColumn":41},{"ruleId":"191","replacedBy":"239"},{"ruleId":"193","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":51,"column":7,"nodeType":"209","endLine":51,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":68,"column":16,"nodeType":"202","endLine":68,"endColumn":67},{"ruleId":"174","severity":1,"message":"243","line":3,"column":17,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":72,"column":68,"nodeType":"202","endLine":72,"endColumn":93},{"ruleId":"200","severity":1,"message":"201","line":81,"column":25,"nodeType":"202","endLine":81,"endColumn":74},{"ruleId":"191","replacedBy":"244"},{"ruleId":"193","replacedBy":"245"},{"ruleId":"200","severity":1,"message":"201","line":8,"column":17,"nodeType":"202","endLine":8,"endColumn":67},{"ruleId":"174","severity":1,"message":"246","line":1,"column":36,"nodeType":"176","messageId":"177","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"247","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":14},{"ruleId":"178","severity":1,"message":"248","line":25,"column":8,"nodeType":"181","endLine":25,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":13,"column":1,"nodeType":"252","endLine":26,"endColumn":2},{"ruleId":"174","severity":1,"message":"253","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":126,"column":31,"nodeType":"202","endLine":126,"endColumn":76},"no-unused-vars","'loadBoxChat' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["254"],"React Hook useEffect has missing dependencies: 'id' and 'user'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'debounceLoadData', 'dispatch', 'id', and 'props.match.params.id'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'newSong'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'getCurrCmp'. Either include it or remove the dependency array.",["258"],"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"React Hook useEffect has a missing dependency: 'screenWidth'. Either include it or remove the dependency array.",["261"],["259"],["260"],"'PlayCircleOutlineIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["259"],["260"],"'AttachFileSharpIcon' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["259"],["260"],"'useEffect' is defined but never used.",["259"],["260"],"'react' is defined but never used.","'socketService' is defined but never used.","'Slider' is defined but never used.","'Range' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["262"],"'newBox' is assigned a value but never used.","'setNewBox' is assigned a value but never used.",["263"],"React Hook useEffect has a missing dependency: 'seekTo'. Either include it or remove the dependency array.",["264"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["259"],["260"],"'loadLoggedUser' is defined but never used.","'img' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["259"],["260"],"react/jsx-no-duplicate-props","No duplicate props allowed","'TextField' is defined but never used.",["259"],["260"],"'useState' is defined but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["265"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'userSvg' is defined but never used.",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"276","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [dispatch, id]",{"range":"285","text":"286"},"Update the dependencies array to be: [id, user, user.favs.length]",{"range":"287","text":"288"},"Update the dependencies array to be: [debounceLoadData, dispatch, id, props.match.params.id, user]",{"range":"289","text":"290"},"Update the dependencies array to be: [currSong, newSong]",{"range":"291","text":"292"},"Update the dependencies array to be: [currCmp, getCurrCmp]",{"range":"293","text":"294"},"Update the dependencies array to be: [screenWidth]",{"range":"295","text":"296"},"Update the dependencies array to be: [dispatch, user]",{"range":"297","text":"298"},{"range":"299","text":"296"},"Update the dependencies array to be: [currSong, seekTo]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch]",{"range":"302","text":"303"},[2197,2199],"[dispatch, id]",[2403,2423],"[id, user, user.favs.length]",[3781,3787],"[debounceLoadData, dispatch, id, props.match.params.id, user]",[4231,4241],"[currSong, newSong]",[4372,4381],"[currCmp, getCurrCmp]",[722,724],"[screenWidth]",[1929,1931],"[dispatch, user]",[2588,2590],[3222,3232],"[currSong, seekTo]",[1145,1147],"[dispatch]"]